{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "ownershipTransfered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "solutionKey",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "solutionAdded",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwnerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setPause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSolutionLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "Solver",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            }
          ],
          "internalType": "struct Verifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "inputs",
          "type": "uint256[2]"
        }
      ],
      "name": "mintNewNFT",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownershipTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"solutionKey\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"solutionAdded\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"Solver\",\"type\":\"address\"}],\"name\":\"addSolution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwnerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSolutionLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct Verifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"inputs\",\"type\":\"uint256[2]\"}],\"name\":\"mintNewNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/D/Udacity_nanodegree_blockchain/ND projects/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Udacity_nanodegree_blockchain/ND projects/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x50cda46c798ba0fd44e0a86959b971ae71ec27def0443cf649be60ccc6a132f0\",\"urls\":[\"bzz-raw://e778141e762250181f1e5a3e8f9c9d70daa2679b29d4ccbfe86fbf8b0217f0fa\",\"dweb:/ipfs/QmUj85NNKF9C4FxtDxehtwK3XmcwHKDVMtyfcrQCu5NtjK\"]},\"/D/Udacity_nanodegree_blockchain/ND projects/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"/D/Udacity_nanodegree_blockchain/ND projects/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x7bd70bb1ce8ae1b9e72daf977ced6b44d6b3e6da6ade152abaee2059c155bb55\",\"urls\":[\"bzz-raw://4326b5dc0295925b9bc2ba23ff9d77a9d87422bcceab761b48675e90ba39d714\",\"dweb:/ipfs/QmaZ3iYL9MG5rGWRYVbPgWqoE3A1dgpDR5NhnsAu558tvS\"]},\"/D/Udacity_nanodegree_blockchain/ND projects/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol\":{\"keccak256\":\"0x0b22f1a9099842411ffd5b2c2fc2c9731d5265f3de24efc99956205b6a60c902\",\"urls\":[\"bzz-raw://db855b66d71150034698ba4dbaa531d5afb56b41d2db3a2b4e6da0d161ffa994\",\"dweb:/ipfs/QmfPCocm349KJMLkFPntEs5BTHXVP71UN9NtjjMTxsyztz\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x608060405260006014556040518060400160405280601381526020017f417374726f20486f7573696e6720546f6b656e000000000000000000000000008152506040518060400160405280600381526020017f41485400000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f815260200162003f34603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff021916908315150217905550620001016301ffc9a760e01b6200019d60201b60201c565b620001196380ac58cd60e01b6200019d60201b60201c565b6200013163780e9d6360e01b6200019d60201b60201c565b82600f9080519060200190620001499291906200023d565b508160109080519060200190620001629291906200023d565b5080601190805190602001906200017b9291906200023d565b5062000194635b5e139f60e01b6200019d60201b60201c565b505050620002ec565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001d157600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028057805160ff1916838001178555620002b1565b82800160010185558215620002b1579182015b82811115620002b057825182559160200191906001019062000293565b5b509050620002c09190620002c4565b5090565b620002e991905b80821115620002e5576000816000905550600101620002cb565b5090565b90565b613c3880620002fc6000396000f3fe608060405234801561001057600080fd5b50600436106101575760003560e01c806342842e0e116100c3578063a22cb4651161007c578063a22cb465146103fe578063b88d4fde1461041a578063bedb86fb14610436578063c87b56dd14610452578063e985e9c514610482578063f2fde38b146104b257610157565b806342842e0e146103025780634f6ccce71461031e5780636352211e1461034e57806370a082311461037e5780637a5b4f59146103ae578063832e1695146103ce57610157565b806323b872dd1161011557806323b872dd1461023257806327dc297e1461024e5780632f745c591461026a57806338bbfa501461029a578063403d81ae146102b657806340c10f19146102d257610157565b8062b80fda1461015c57806301ffc9a71461017a578063081812fc146101aa578063095ea7b3146101da5780630c4f65bd146101f657806318160ddd14610214575b600080fd5b6101646104ce565b60405161017191906138c7565b60405180910390f35b610194600480360361018f9190810190612e0a565b6104db565b6040516101a19190613673565b60405180910390f35b6101c460048036036101bf9190810190612e5c565b610543565b6040516101d191906135c8565b60405180910390f35b6101f460048036036101ef9190810190612c44565b610622565b005b6101fe610801565b60405161020b91906135c8565b60405180910390f35b61021c61082a565b60405161022991906138c7565b60405180910390f35b61024c60048036036102479190810190612b3e565b610837565b005b61026860048036036102639190810190612d37565b61085a565b005b610284600480360361027f9190810190612c44565b61089d565b60405161029191906138c7565b60405180910390f35b6102b460048036036102af9190810190612d8b565b610910565b005b6102d060048036036102cb9190810190612c80565b610915565b005b6102ec60048036036102e79190810190612c44565b610bf1565b6040516102f99190613673565b60405180910390f35b61031c60048036036103179190810190612b3e565b610ca1565b005b61033860048036036103339190810190612e5c565b610cc1565b60405161034591906138c7565b60405180910390f35b61036860048036036103639190810190612e5c565b610cf5565b60405161037591906135c8565b60405180910390f35b61039860048036036103939190810190612ad9565b610d32565b6040516103a591906138c7565b60405180910390f35b6103b6610d82565b6040516103c5939291906136b0565b60405180910390f35b6103e860048036036103e39190810190612ad9565b610f6c565b6040516103f591906138c7565b60405180910390f35b61041860048036036104139190810190612c08565b611090565b005b610434600480360361042f9190810190612b8d565b6111c6565b005b610450600480360361044b9190810190612ce5565b6111ec565b005b61046c60048036036104679190810190612e5c565b611380565b604051610479919061368e565b60405180910390f35b61049c60048036036104979190810190612b02565b611447565b6040516104a99190613673565b60405180910390f35b6104cc60048036036104c79190810190612ad9565b6114db565b005b6000601680549050905090565b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105de906137bc565b60405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061062c610801565b90508273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c79061375c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610710575061070f8133611447565b5b61074f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107469061385c565b60405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600880549050905090565b61084133826115ea565b61084a57600080fd5b61085583838361167f565b505050565b610899828260006040519080825280601f01601f1916602001820160405280156108935781602001600182028038833980820191505090505b50610910565b5050565b60006108a883610d32565b82106108b357600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106108fd57fe5b9060005260206000200154905092915050565b505050565b6000826000015160000151836000015160200151846020015160000151856020015160200151866040015160000151876040015160200151876040516020016109649796959493929190613547565b60405160208183030381529060405280519060200120905060006015600083815260200190815260200160002060000154148015610a045750600073ffffffffffffffffffffffffffffffffffffffff166015600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a906137fc565b60405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc84846040518363ffffffff1660e01b8152600401610aa092919061389c565b60206040518083038186803b158015610ab857600080fd5b505afa158015610acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610af09190810190612d0e565b610b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b26906137dc565b60405180910390fd5b6000610b3a86610f6c565b905060168181548110610b4957fe5b906000526020600020906002020160156000848152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050610be88686610bf1565b50505050505050565b6000338073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7a9061383c565b60405180910390fd5b610c8d84846116a3565b610c96836116c4565b600191505092915050565b610cbc838383604051806020016040528060008152506111c6565b505050565b6000610ccb61082a565b8210610cd657600080fd5b60088281548110610ce357fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d7b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206117e8565b9050919050565b6060806060600f60106011828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e225780601f10610df757610100808354040283529160200191610e22565b820191906000526020600020905b815481529060010190602001808311610e0557829003601f168201915b50505050509250818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ebe5780601f10610e9357610100808354040283529160200191610ebe565b820191906000526020600020905b815481529060010190602001808311610ea157829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f5a5780601f10610f2f57610100808354040283529160200191610f5a565b820191906000526020600020905b815481529060010190602001808311610f3d57829003601f168201915b50505050509050925092509250909192565b6000610f766126bc565b604051806040016040528060145481526020018473ffffffffffffffffffffffffffffffffffffffff168152509050601681908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f529aebee0fa53cdfb493ac455bd2a7b5924a502f5e34b85b84ebda0e84e62cb2816000015182602001516040516110609291906138e2565b60405180910390a16000601454905061108560016014546117f690919063ffffffff16565b508092505050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110c957600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111ba9190613673565b60405180910390a35050565b6111d1848484610837565b6111dd8484848461184b565b6111e657600080fd5b50505050565b338073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461127c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112739061383c565b60405180910390fd5b600060149054906101000a900460ff16151582151514156112d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c99061379c565b60405180910390fd5b81600060146101000a81548160ff02191690831515021790555060011515600060149054906101000a900460ff1615151415611344577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583360405161133791906135e3565b60405180910390a161137c565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa3360405161137391906135e3565b60405180910390a15b5050565b606061138b82611962565b61139457600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561143b5780601f106114105761010080835404028352916020019161143b565b820191906000526020600020905b81548152906001019060200180831161141e57829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b338073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461156b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115629061383c565b60405180910390fd5b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d3906136fc565b60405180910390fd5b6115e5836119d4565b505050565b6000806115f683610cf5565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061166557508373ffffffffffffffffffffffffffffffffffffffff1661164d84610543565b73ffffffffffffffffffffffffffffffffffffffff16145b8061167657506116758185611447565b5b91505092915050565b61168a838383611a77565b6116948382611cfe565b61169e8282611e9c565b505050565b6116ad8282611f63565b6116b78282611e9c565b6116c081612114565b5050565b6116cd81611962565b61170c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117039061381c565b60405180910390fd5b60606117ba60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117a75780601f1061177c576101008083540402835291602001916117a7565b820191906000526020600020905b81548152906001019060200180831161178a57829003601f168201915b50505050506117b584612160565b61228d565b9050806012600084815260200190815260200160002090805190602001906117e39291906126ec565b505050565b600081600001549050919050565b600080828401905083811015611841576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118389061373c565b60405180910390fd5b8091505092915050565b600061186c8473ffffffffffffffffffffffffffffffffffffffff166122d1565b611879576001905061195a565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016118ba94939291906135fe565b602060405180830381600087803b1580156118d457600080fd5b505af11580156118e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061190c9190810190612e33565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507feb38696426b5aa8881f6ba9f2f3e0ac06ee7ea6ffbe944120578d61191ef61018183604051611a6b92919061364a565b60405180910390a15050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611b18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0f9061371c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7f9061387c565b60405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055611c05600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061231c565b611c4c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061233f565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611d566001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061235590919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611e43576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611dc357fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611e1b57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611e95919061276c565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611f6c81611962565b611fab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa29061381c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561201b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120129061377c565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120b4600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061233f565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156121a8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612288565b600082905060005b600082146121d2578080600101915050600a82816121ca57fe5b0491506121b0565b6060816040519080825280601f01601f1916602001820160405280156122075781602001600182028038833980820191505090505b50905060006001830390505b6000861461228057600a868161222557fe5b0660300160f81b8282806001900393508151811061223f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161227857fe5b049550612213565b819450505050505b919050565b60606122c9838360405180602001604052806000815250604051806020016040528060008152506040518060200160405280600081525061239f565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561231357506000801b8214155b92505050919050565b6123346001826000015461235590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061239783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612661565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156123fb5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156124805788818151811061242757fe5b602001015160f81c60f81b83838060010194508151811061244457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612412565b600090505b87518110156124f35787818151811061249a57fe5b602001015160f81c60f81b8383806001019450815181106124b757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612485565b600090505b86518110156125665786818151811061250d57fe5b602001015160f81c60f81b83838060010194508151811061252a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506124f8565b600090505b85518110156125d95785818151811061258057fe5b602001015160f81c60f81b83838060010194508151811061259d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061256b565b600090505b845181101561264c578481815181106125f357fe5b602001015160f81c60f81b83838060010194508151811061261057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506125de565b82995050505050505050505095945050505050565b60008383111582906126a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126a0919061368e565b60405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061272d57805160ff191683800117855561275b565b8280016001018555821561275b579182015b8281111561275a57825182559160200191906001019061273f565b5b5090506127689190612798565b5090565b815481835581811115612793578183600052602060002091820191016127929190612798565b5b505050565b6127ba91905b808211156127b657600081600090555060010161279e565b5090565b90565b6000813590506127cc81613b82565b92915050565b600082601f8301126127e357600080fd5b60026127f66127f182613938565b61390b565b9150818385602084028201111561280c57600080fd5b60005b8381101561283c57816128228882612ac4565b84526020840193506020830192505060018101905061280f565b5050505092915050565b600082601f83011261285757600080fd5b600261286a6128658261395a565b61390b565b9150818385602084028201111561288057600080fd5b60005b838110156128b057816128968882612ac4565b845260208401935060208301925050600181019050612883565b5050505092915050565b6000813590506128c981613b99565b92915050565b6000815190506128de81613b99565b92915050565b6000813590506128f381613bb0565b92915050565b60008135905061290881613bc7565b92915050565b60008151905061291d81613bc7565b92915050565b600082601f83011261293457600080fd5b81356129476129428261397c565b61390b565b9150808252602083016020830185838301111561296357600080fd5b61296e838284613b25565b50505092915050565b600082601f83011261298857600080fd5b813561299b612996826139a8565b61390b565b915080825260208301602083018583830111156129b757600080fd5b6129c2838284613b25565b50505092915050565b6000604082840312156129dd57600080fd5b6129e7604061390b565b905060006129f784828501612ac4565b6000830152506020612a0b84828501612ac4565b60208301525092915050565b600060808284031215612a2957600080fd5b612a33604061390b565b90506000612a43848285016127d2565b6000830152506040612a57848285016127d2565b60208301525092915050565b60006101008284031215612a7657600080fd5b612a80606061390b565b90506000612a90848285016129cb565b6000830152506040612aa484828501612a17565b60208301525060c0612ab8848285016129cb565b60408301525092915050565b600081359050612ad381613bde565b92915050565b600060208284031215612aeb57600080fd5b6000612af9848285016127bd565b91505092915050565b60008060408385031215612b1557600080fd5b6000612b23858286016127bd565b9250506020612b34858286016127bd565b9150509250929050565b600080600060608486031215612b5357600080fd5b6000612b61868287016127bd565b9350506020612b72868287016127bd565b9250506040612b8386828701612ac4565b9150509250925092565b60008060008060808587031215612ba357600080fd5b6000612bb1878288016127bd565b9450506020612bc2878288016127bd565b9350506040612bd387828801612ac4565b925050606085013567ffffffffffffffff811115612bf057600080fd5b612bfc87828801612923565b91505092959194509250565b60008060408385031215612c1b57600080fd5b6000612c29858286016127bd565b9250506020612c3a858286016128ba565b9150509250929050565b60008060408385031215612c5757600080fd5b6000612c65858286016127bd565b9250506020612c7685828601612ac4565b9150509250929050565b6000806000806101808587031215612c9757600080fd5b6000612ca5878288016127bd565b9450506020612cb687828801612ac4565b9350506040612cc787828801612a63565b925050610140612cd987828801612846565b91505092959194509250565b600060208284031215612cf757600080fd5b6000612d05848285016128ba565b91505092915050565b600060208284031215612d2057600080fd5b6000612d2e848285016128cf565b91505092915050565b60008060408385031215612d4a57600080fd5b6000612d58858286016128e4565b925050602083013567ffffffffffffffff811115612d7557600080fd5b612d8185828601612977565b9150509250929050565b600080600060608486031215612da057600080fd5b6000612dae868287016128e4565b935050602084013567ffffffffffffffff811115612dcb57600080fd5b612dd786828701612977565b925050604084013567ffffffffffffffff811115612df457600080fd5b612e0086828701612923565b9150509250925092565b600060208284031215612e1c57600080fd5b6000612e2a848285016128f9565b91505092915050565b600060208284031215612e4557600080fd5b6000612e538482850161290e565b91505092915050565b600060208284031215612e6e57600080fd5b6000612e7c84828501612ac4565b91505092915050565b6000612e918383613503565b60208301905092915050565b6000612ea98383613521565b60208301905092915050565b612ebe81613aef565b82525050565b612ecd81613a71565b82525050565b612edc816139f3565b612ee68184613a39565b9250612ef1826139de565b8060005b83811015612f22578151612f098782612e85565b9650612f1483613a21565b925050600181019050612ef5565b505050505050565b612f33816139f3565b612f3d8184613a44565b9250612f48826139de565b8060005b83811015612f79578151612f608782612e9d565b9650612f6b83613a21565b925050600181019050612f4c565b505050505050565b612f8a816139e8565b612f948184613a2e565b9250612f9f826139d4565b8060005b83811015612fd0578151612fb78782612e85565b9650612fc283613a14565b925050600181019050612fa3565b505050505050565b612fe1816139e8565b612feb8184613a44565b9250612ff6826139d4565b8060005b8381101561302757815161300e8782612e9d565b965061301983613a14565b925050600181019050612ffa565b505050505050565b61303881613a83565b82525050565b6000613049826139fe565b6130538185613a4f565b9350613063818560208601613b34565b61306c81613b71565b840191505092915050565b600061308282613a09565b61308c8185613a60565b935061309c818560208601613b34565b6130a581613b71565b840191505092915050565b60006130bd601e83613a60565b91507f4e6577206f776e657220697320746865207a65726f20616464726573732e00006000830152602082019050919050565b60006130fd602883613a60565b91507f596f7520617265206e6f7420746865206f776e6572206f66207468652067697660008301527f656e20746f6b656e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613163601b83613a60565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b60006131a3601b83613a60565b91507f596f7520616c7265616479206f776e207468697320746f6b656e2e00000000006000830152602082019050919050565b60006131e3601d83613a60565b91507f54686520676976656e206164647265737320697320696e76616c69642e0000006000830152602082019050919050565b6000613223602b83613a60565b91507f546865206e65772076616c7565206f66207061757365642068617320746f206260008301527f65206469666672656e742e0000000000000000000000000000000000000000006020830152604082019050919050565b6000613289601b83613a60565b91507f5468697320746f6b656e206973206e6f7420617070726f7665642e00000000006000830152602082019050919050565b60006132c9601783613a60565b91507f5468652070726f6f6620697320696e636f72726563742e0000000000000000006000830152602082019050919050565b6000613309601683613a60565b91507f536f6c7574696f6e20616c726561647920757365642e000000000000000000006000830152602082019050919050565b6000613349601983613a60565b91507f54686520746f6b656e20616c7265616479206578697374732e000000000000006000830152602082019050919050565b6000613389601e83613a60565b91507f596f7572206163636f756e74206973206e6f7420746865206f776e65722e00006000830152602082019050919050565b60006133c9601383613a60565b91507f596f75206e6565656420617070726f76616c2e000000000000000000000000006000830152602082019050919050565b6000613409603683613a60565b91507f54686520616464726573732c207468617420746f6b656e206973206265696e6760008301527f207472616e73666572656420697320696e76616c6964000000000000000000006020830152604082019050919050565b6040820160008201516134786000850182613503565b50602082015161348b6020850182613503565b50505050565b6080820160008201516134a76000850182612f81565b5060208201516134ba6040850182612f81565b50505050565b610100820160008201516134d76000850182613462565b5060208201516134ea6040850182613491565b5060408201516134fd60c0850182613462565b50505050565b61350c81613ae5565b82525050565b61351b81613ae5565b82525050565b61352a81613ae5565b82525050565b61354161353c82613ae5565b613b67565b82525050565b6000613553828a613530565b6020820191506135638289613530565b6020820191506135738288612fd8565b6040820191506135838287612fd8565b6040820191506135938286613530565b6020820191506135a38285613530565b6020820191506135b38284612f2a565b60408201915081905098975050505050505050565b60006020820190506135dd6000830184612ec4565b92915050565b60006020820190506135f86000830184612eb5565b92915050565b60006080820190506136136000830187612eb5565b6136206020830186612ec4565b61362d6040830185613512565b818103606083015261363f818461303e565b905095945050505050565b600060408201905061365f6000830185612ec4565b61366c6020830184612ec4565b9392505050565b6000602082019050613688600083018461302f565b92915050565b600060208201905081810360008301526136a88184613077565b905092915050565b600060608201905081810360008301526136ca8186613077565b905081810360208301526136de8185613077565b905081810360408301526136f28184613077565b9050949350505050565b60006020820190508181036000830152613715816130b0565b9050919050565b60006020820190508181036000830152613735816130f0565b9050919050565b6000602082019050818103600083015261375581613156565b9050919050565b6000602082019050818103600083015261377581613196565b9050919050565b60006020820190508181036000830152613795816131d6565b9050919050565b600060208201905081810360008301526137b581613216565b9050919050565b600060208201905081810360008301526137d58161327c565b9050919050565b600060208201905081810360008301526137f5816132bc565b9050919050565b60006020820190508181036000830152613815816132fc565b9050919050565b600060208201905081810360008301526138358161333c565b9050919050565b600060208201905081810360008301526138558161337c565b9050919050565b60006020820190508181036000830152613875816133bc565b9050919050565b60006020820190508181036000830152613895816133fc565b9050919050565b6000610140820190506138b260008301856134c0565b6138c0610100830184612ed3565b9392505050565b60006020820190506138dc6000830184613512565b92915050565b60006040820190506138f76000830185613512565b6139046020830184612ec4565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561392e57600080fd5b8060405250919050565b600067ffffffffffffffff82111561394f57600080fd5b602082029050919050565b600067ffffffffffffffff82111561397157600080fd5b602082029050919050565b600067ffffffffffffffff82111561399357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156139bf57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613a7c82613ac5565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613afa82613b01565b9050919050565b6000613b0c82613b13565b9050919050565b6000613b1e82613ac5565b9050919050565b82818337600083830152505050565b60005b83811015613b52578082015181840152602081019050613b37565b83811115613b61576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b613b8b81613a71565b8114613b9657600080fd5b50565b613ba281613a83565b8114613bad57600080fd5b50565b613bb981613a8f565b8114613bc457600080fd5b50565b613bd081613a99565b8114613bdb57600080fd5b50565b613be781613ae5565b8114613bf257600080fd5b5056fea365627a7a7231582077594570df83054e574e274152336a77207938296b97662d5d3976a873be2c9d6c6578706572696d656e74616cf564736f6c634300050c004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101575760003560e01c806342842e0e116100c3578063a22cb4651161007c578063a22cb465146103fe578063b88d4fde1461041a578063bedb86fb14610436578063c87b56dd14610452578063e985e9c514610482578063f2fde38b146104b257610157565b806342842e0e146103025780634f6ccce71461031e5780636352211e1461034e57806370a082311461037e5780637a5b4f59146103ae578063832e1695146103ce57610157565b806323b872dd1161011557806323b872dd1461023257806327dc297e1461024e5780632f745c591461026a57806338bbfa501461029a578063403d81ae146102b657806340c10f19146102d257610157565b8062b80fda1461015c57806301ffc9a71461017a578063081812fc146101aa578063095ea7b3146101da5780630c4f65bd146101f657806318160ddd14610214575b600080fd5b6101646104ce565b60405161017191906138c7565b60405180910390f35b610194600480360361018f9190810190612e0a565b6104db565b6040516101a19190613673565b60405180910390f35b6101c460048036036101bf9190810190612e5c565b610543565b6040516101d191906135c8565b60405180910390f35b6101f460048036036101ef9190810190612c44565b610622565b005b6101fe610801565b60405161020b91906135c8565b60405180910390f35b61021c61082a565b60405161022991906138c7565b60405180910390f35b61024c60048036036102479190810190612b3e565b610837565b005b61026860048036036102639190810190612d37565b61085a565b005b610284600480360361027f9190810190612c44565b61089d565b60405161029191906138c7565b60405180910390f35b6102b460048036036102af9190810190612d8b565b610910565b005b6102d060048036036102cb9190810190612c80565b610915565b005b6102ec60048036036102e79190810190612c44565b610bf1565b6040516102f99190613673565b60405180910390f35b61031c60048036036103179190810190612b3e565b610ca1565b005b61033860048036036103339190810190612e5c565b610cc1565b60405161034591906138c7565b60405180910390f35b61036860048036036103639190810190612e5c565b610cf5565b60405161037591906135c8565b60405180910390f35b61039860048036036103939190810190612ad9565b610d32565b6040516103a591906138c7565b60405180910390f35b6103b6610d82565b6040516103c5939291906136b0565b60405180910390f35b6103e860048036036103e39190810190612ad9565b610f6c565b6040516103f591906138c7565b60405180910390f35b61041860048036036104139190810190612c08565b611090565b005b610434600480360361042f9190810190612b8d565b6111c6565b005b610450600480360361044b9190810190612ce5565b6111ec565b005b61046c60048036036104679190810190612e5c565b611380565b604051610479919061368e565b60405180910390f35b61049c60048036036104979190810190612b02565b611447565b6040516104a99190613673565b60405180910390f35b6104cc60048036036104c79190810190612ad9565b6114db565b005b6000601680549050905090565b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105de906137bc565b60405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061062c610801565b90508273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c79061375c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610710575061070f8133611447565b5b61074f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107469061385c565b60405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600880549050905090565b61084133826115ea565b61084a57600080fd5b61085583838361167f565b505050565b610899828260006040519080825280601f01601f1916602001820160405280156108935781602001600182028038833980820191505090505b50610910565b5050565b60006108a883610d32565b82106108b357600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106108fd57fe5b9060005260206000200154905092915050565b505050565b6000826000015160000151836000015160200151846020015160000151856020015160200151866040015160000151876040015160200151876040516020016109649796959493929190613547565b60405160208183030381529060405280519060200120905060006015600083815260200190815260200160002060000154148015610a045750600073ffffffffffffffffffffffffffffffffffffffff166015600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a906137fc565b60405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc84846040518363ffffffff1660e01b8152600401610aa092919061389c565b60206040518083038186803b158015610ab857600080fd5b505afa158015610acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610af09190810190612d0e565b610b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b26906137dc565b60405180910390fd5b6000610b3a86610f6c565b905060168181548110610b4957fe5b906000526020600020906002020160156000848152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050610be88686610bf1565b50505050505050565b6000338073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7a9061383c565b60405180910390fd5b610c8d84846116a3565b610c96836116c4565b600191505092915050565b610cbc838383604051806020016040528060008152506111c6565b505050565b6000610ccb61082a565b8210610cd657600080fd5b60088281548110610ce357fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d7b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206117e8565b9050919050565b6060806060600f60106011828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e225780601f10610df757610100808354040283529160200191610e22565b820191906000526020600020905b815481529060010190602001808311610e0557829003601f168201915b50505050509250818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ebe5780601f10610e9357610100808354040283529160200191610ebe565b820191906000526020600020905b815481529060010190602001808311610ea157829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f5a5780601f10610f2f57610100808354040283529160200191610f5a565b820191906000526020600020905b815481529060010190602001808311610f3d57829003601f168201915b50505050509050925092509250909192565b6000610f766126bc565b604051806040016040528060145481526020018473ffffffffffffffffffffffffffffffffffffffff168152509050601681908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f529aebee0fa53cdfb493ac455bd2a7b5924a502f5e34b85b84ebda0e84e62cb2816000015182602001516040516110609291906138e2565b60405180910390a16000601454905061108560016014546117f690919063ffffffff16565b508092505050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110c957600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111ba9190613673565b60405180910390a35050565b6111d1848484610837565b6111dd8484848461184b565b6111e657600080fd5b50505050565b338073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461127c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112739061383c565b60405180910390fd5b600060149054906101000a900460ff16151582151514156112d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c99061379c565b60405180910390fd5b81600060146101000a81548160ff02191690831515021790555060011515600060149054906101000a900460ff1615151415611344577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583360405161133791906135e3565b60405180910390a161137c565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa3360405161137391906135e3565b60405180910390a15b5050565b606061138b82611962565b61139457600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561143b5780601f106114105761010080835404028352916020019161143b565b820191906000526020600020905b81548152906001019060200180831161141e57829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b338073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461156b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115629061383c565b60405180910390fd5b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d3906136fc565b60405180910390fd5b6115e5836119d4565b505050565b6000806115f683610cf5565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061166557508373ffffffffffffffffffffffffffffffffffffffff1661164d84610543565b73ffffffffffffffffffffffffffffffffffffffff16145b8061167657506116758185611447565b5b91505092915050565b61168a838383611a77565b6116948382611cfe565b61169e8282611e9c565b505050565b6116ad8282611f63565b6116b78282611e9c565b6116c081612114565b5050565b6116cd81611962565b61170c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117039061381c565b60405180910390fd5b60606117ba60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117a75780601f1061177c576101008083540402835291602001916117a7565b820191906000526020600020905b81548152906001019060200180831161178a57829003601f168201915b50505050506117b584612160565b61228d565b9050806012600084815260200190815260200160002090805190602001906117e39291906126ec565b505050565b600081600001549050919050565b600080828401905083811015611841576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118389061373c565b60405180910390fd5b8091505092915050565b600061186c8473ffffffffffffffffffffffffffffffffffffffff166122d1565b611879576001905061195a565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016118ba94939291906135fe565b602060405180830381600087803b1580156118d457600080fd5b505af11580156118e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061190c9190810190612e33565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507feb38696426b5aa8881f6ba9f2f3e0ac06ee7ea6ffbe944120578d61191ef61018183604051611a6b92919061364a565b60405180910390a15050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611b18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0f9061371c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7f9061387c565b60405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055611c05600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061231c565b611c4c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061233f565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611d566001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061235590919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611e43576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611dc357fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611e1b57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611e95919061276c565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611f6c81611962565b611fab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa29061381c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561201b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120129061377c565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120b4600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061233f565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156121a8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612288565b600082905060005b600082146121d2578080600101915050600a82816121ca57fe5b0491506121b0565b6060816040519080825280601f01601f1916602001820160405280156122075781602001600182028038833980820191505090505b50905060006001830390505b6000861461228057600a868161222557fe5b0660300160f81b8282806001900393508151811061223f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161227857fe5b049550612213565b819450505050505b919050565b60606122c9838360405180602001604052806000815250604051806020016040528060008152506040518060200160405280600081525061239f565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561231357506000801b8214155b92505050919050565b6123346001826000015461235590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061239783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612661565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156123fb5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156124805788818151811061242757fe5b602001015160f81c60f81b83838060010194508151811061244457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612412565b600090505b87518110156124f35787818151811061249a57fe5b602001015160f81c60f81b8383806001019450815181106124b757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612485565b600090505b86518110156125665786818151811061250d57fe5b602001015160f81c60f81b83838060010194508151811061252a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506124f8565b600090505b85518110156125d95785818151811061258057fe5b602001015160f81c60f81b83838060010194508151811061259d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061256b565b600090505b845181101561264c578481815181106125f357fe5b602001015160f81c60f81b83838060010194508151811061261057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506125de565b82995050505050505050505095945050505050565b60008383111582906126a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126a0919061368e565b60405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061272d57805160ff191683800117855561275b565b8280016001018555821561275b579182015b8281111561275a57825182559160200191906001019061273f565b5b5090506127689190612798565b5090565b815481835581811115612793578183600052602060002091820191016127929190612798565b5b505050565b6127ba91905b808211156127b657600081600090555060010161279e565b5090565b90565b6000813590506127cc81613b82565b92915050565b600082601f8301126127e357600080fd5b60026127f66127f182613938565b61390b565b9150818385602084028201111561280c57600080fd5b60005b8381101561283c57816128228882612ac4565b84526020840193506020830192505060018101905061280f565b5050505092915050565b600082601f83011261285757600080fd5b600261286a6128658261395a565b61390b565b9150818385602084028201111561288057600080fd5b60005b838110156128b057816128968882612ac4565b845260208401935060208301925050600181019050612883565b5050505092915050565b6000813590506128c981613b99565b92915050565b6000815190506128de81613b99565b92915050565b6000813590506128f381613bb0565b92915050565b60008135905061290881613bc7565b92915050565b60008151905061291d81613bc7565b92915050565b600082601f83011261293457600080fd5b81356129476129428261397c565b61390b565b9150808252602083016020830185838301111561296357600080fd5b61296e838284613b25565b50505092915050565b600082601f83011261298857600080fd5b813561299b612996826139a8565b61390b565b915080825260208301602083018583830111156129b757600080fd5b6129c2838284613b25565b50505092915050565b6000604082840312156129dd57600080fd5b6129e7604061390b565b905060006129f784828501612ac4565b6000830152506020612a0b84828501612ac4565b60208301525092915050565b600060808284031215612a2957600080fd5b612a33604061390b565b90506000612a43848285016127d2565b6000830152506040612a57848285016127d2565b60208301525092915050565b60006101008284031215612a7657600080fd5b612a80606061390b565b90506000612a90848285016129cb565b6000830152506040612aa484828501612a17565b60208301525060c0612ab8848285016129cb565b60408301525092915050565b600081359050612ad381613bde565b92915050565b600060208284031215612aeb57600080fd5b6000612af9848285016127bd565b91505092915050565b60008060408385031215612b1557600080fd5b6000612b23858286016127bd565b9250506020612b34858286016127bd565b9150509250929050565b600080600060608486031215612b5357600080fd5b6000612b61868287016127bd565b9350506020612b72868287016127bd565b9250506040612b8386828701612ac4565b9150509250925092565b60008060008060808587031215612ba357600080fd5b6000612bb1878288016127bd565b9450506020612bc2878288016127bd565b9350506040612bd387828801612ac4565b925050606085013567ffffffffffffffff811115612bf057600080fd5b612bfc87828801612923565b91505092959194509250565b60008060408385031215612c1b57600080fd5b6000612c29858286016127bd565b9250506020612c3a858286016128ba565b9150509250929050565b60008060408385031215612c5757600080fd5b6000612c65858286016127bd565b9250506020612c7685828601612ac4565b9150509250929050565b6000806000806101808587031215612c9757600080fd5b6000612ca5878288016127bd565b9450506020612cb687828801612ac4565b9350506040612cc787828801612a63565b925050610140612cd987828801612846565b91505092959194509250565b600060208284031215612cf757600080fd5b6000612d05848285016128ba565b91505092915050565b600060208284031215612d2057600080fd5b6000612d2e848285016128cf565b91505092915050565b60008060408385031215612d4a57600080fd5b6000612d58858286016128e4565b925050602083013567ffffffffffffffff811115612d7557600080fd5b612d8185828601612977565b9150509250929050565b600080600060608486031215612da057600080fd5b6000612dae868287016128e4565b935050602084013567ffffffffffffffff811115612dcb57600080fd5b612dd786828701612977565b925050604084013567ffffffffffffffff811115612df457600080fd5b612e0086828701612923565b9150509250925092565b600060208284031215612e1c57600080fd5b6000612e2a848285016128f9565b91505092915050565b600060208284031215612e4557600080fd5b6000612e538482850161290e565b91505092915050565b600060208284031215612e6e57600080fd5b6000612e7c84828501612ac4565b91505092915050565b6000612e918383613503565b60208301905092915050565b6000612ea98383613521565b60208301905092915050565b612ebe81613aef565b82525050565b612ecd81613a71565b82525050565b612edc816139f3565b612ee68184613a39565b9250612ef1826139de565b8060005b83811015612f22578151612f098782612e85565b9650612f1483613a21565b925050600181019050612ef5565b505050505050565b612f33816139f3565b612f3d8184613a44565b9250612f48826139de565b8060005b83811015612f79578151612f608782612e9d565b9650612f6b83613a21565b925050600181019050612f4c565b505050505050565b612f8a816139e8565b612f948184613a2e565b9250612f9f826139d4565b8060005b83811015612fd0578151612fb78782612e85565b9650612fc283613a14565b925050600181019050612fa3565b505050505050565b612fe1816139e8565b612feb8184613a44565b9250612ff6826139d4565b8060005b8381101561302757815161300e8782612e9d565b965061301983613a14565b925050600181019050612ffa565b505050505050565b61303881613a83565b82525050565b6000613049826139fe565b6130538185613a4f565b9350613063818560208601613b34565b61306c81613b71565b840191505092915050565b600061308282613a09565b61308c8185613a60565b935061309c818560208601613b34565b6130a581613b71565b840191505092915050565b60006130bd601e83613a60565b91507f4e6577206f776e657220697320746865207a65726f20616464726573732e00006000830152602082019050919050565b60006130fd602883613a60565b91507f596f7520617265206e6f7420746865206f776e6572206f66207468652067697660008301527f656e20746f6b656e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613163601b83613a60565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b60006131a3601b83613a60565b91507f596f7520616c7265616479206f776e207468697320746f6b656e2e00000000006000830152602082019050919050565b60006131e3601d83613a60565b91507f54686520676976656e206164647265737320697320696e76616c69642e0000006000830152602082019050919050565b6000613223602b83613a60565b91507f546865206e65772076616c7565206f66207061757365642068617320746f206260008301527f65206469666672656e742e0000000000000000000000000000000000000000006020830152604082019050919050565b6000613289601b83613a60565b91507f5468697320746f6b656e206973206e6f7420617070726f7665642e00000000006000830152602082019050919050565b60006132c9601783613a60565b91507f5468652070726f6f6620697320696e636f72726563742e0000000000000000006000830152602082019050919050565b6000613309601683613a60565b91507f536f6c7574696f6e20616c726561647920757365642e000000000000000000006000830152602082019050919050565b6000613349601983613a60565b91507f54686520746f6b656e20616c7265616479206578697374732e000000000000006000830152602082019050919050565b6000613389601e83613a60565b91507f596f7572206163636f756e74206973206e6f7420746865206f776e65722e00006000830152602082019050919050565b60006133c9601383613a60565b91507f596f75206e6565656420617070726f76616c2e000000000000000000000000006000830152602082019050919050565b6000613409603683613a60565b91507f54686520616464726573732c207468617420746f6b656e206973206265696e6760008301527f207472616e73666572656420697320696e76616c6964000000000000000000006020830152604082019050919050565b6040820160008201516134786000850182613503565b50602082015161348b6020850182613503565b50505050565b6080820160008201516134a76000850182612f81565b5060208201516134ba6040850182612f81565b50505050565b610100820160008201516134d76000850182613462565b5060208201516134ea6040850182613491565b5060408201516134fd60c0850182613462565b50505050565b61350c81613ae5565b82525050565b61351b81613ae5565b82525050565b61352a81613ae5565b82525050565b61354161353c82613ae5565b613b67565b82525050565b6000613553828a613530565b6020820191506135638289613530565b6020820191506135738288612fd8565b6040820191506135838287612fd8565b6040820191506135938286613530565b6020820191506135a38285613530565b6020820191506135b38284612f2a565b60408201915081905098975050505050505050565b60006020820190506135dd6000830184612ec4565b92915050565b60006020820190506135f86000830184612eb5565b92915050565b60006080820190506136136000830187612eb5565b6136206020830186612ec4565b61362d6040830185613512565b818103606083015261363f818461303e565b905095945050505050565b600060408201905061365f6000830185612ec4565b61366c6020830184612ec4565b9392505050565b6000602082019050613688600083018461302f565b92915050565b600060208201905081810360008301526136a88184613077565b905092915050565b600060608201905081810360008301526136ca8186613077565b905081810360208301526136de8185613077565b905081810360408301526136f28184613077565b9050949350505050565b60006020820190508181036000830152613715816130b0565b9050919050565b60006020820190508181036000830152613735816130f0565b9050919050565b6000602082019050818103600083015261375581613156565b9050919050565b6000602082019050818103600083015261377581613196565b9050919050565b60006020820190508181036000830152613795816131d6565b9050919050565b600060208201905081810360008301526137b581613216565b9050919050565b600060208201905081810360008301526137d58161327c565b9050919050565b600060208201905081810360008301526137f5816132bc565b9050919050565b60006020820190508181036000830152613815816132fc565b9050919050565b600060208201905081810360008301526138358161333c565b9050919050565b600060208201905081810360008301526138558161337c565b9050919050565b60006020820190508181036000830152613875816133bc565b9050919050565b60006020820190508181036000830152613895816133fc565b9050919050565b6000610140820190506138b260008301856134c0565b6138c0610100830184612ed3565b9392505050565b60006020820190506138dc6000830184613512565b92915050565b60006040820190506138f76000830185613512565b6139046020830184612ec4565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561392e57600080fd5b8060405250919050565b600067ffffffffffffffff82111561394f57600080fd5b602082029050919050565b600067ffffffffffffffff82111561397157600080fd5b602082029050919050565b600067ffffffffffffffff82111561399357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156139bf57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613a7c82613ac5565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613afa82613b01565b9050919050565b6000613b0c82613b13565b9050919050565b6000613b1e82613ac5565b9050919050565b82818337600083830152505050565b60005b83811015613b52578082015181840152602081019050613b37565b83811115613b61576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b613b8b81613a71565b8114613b9657600080fd5b50565b613ba281613a83565b8114613bad57600080fd5b50565b613bb981613a8f565b8114613bc457600080fd5b50565b613bd081613a99565b8114613bdb57600080fd5b50565b613be781613ae5565b8114613bf257600080fd5b5056fea365627a7a7231582077594570df83054e574e274152336a77207938296b97662d5d3976a873be2c9d6c6578706572696d656e74616cf564736f6c634300050c0040",
  "sourceMap": "185:1453:3:-;;;371:1;347:25;;18307:242:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;745:10;736:6;;:19;;;;;;;;;;;;;;;;;;1590:5;1580:7;;:15;;;;;;;;;;;;;;;;;;2389:40;1986:10;2408:20;;2389:18;;;:40;;:::i;:::-;4535;4409:10;4554:20;;4535:18;;;:40;;:::i;:::-;11190:51;10796:10;11209:31;;11190:18;;;:51;;:::i;:::-;18415:4;18407:5;:12;;;;;;;;;;;;:::i;:::-;;18439:6;18429:7;:16;;;;;;;;;;;;:::i;:::-;;18471:12;18455:13;:28;;;;;;;;;;;;:::i;:::-;;18493:49;18119:10;18512:29;;18493:18;;;:49;;:::i;:::-;18307:242;;;185:1453:3;;2739:158:0;2829:10;2814:25;;:11;:25;;;;;2806:34;;;;;;2886:4;2850:20;:33;2871:11;2850:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;2739:158;:::o;185:1453:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "185:1453:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;185:1453:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;538:98;;;:::i;:::-;;;;;;;;;;;;;;;;2527:133:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5285:204;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4896:383;;;;;;;;;;;;;;;;:::i;:::-;;768:89;;;:::i;:::-;;;;;;;;;;;;;;;;11955:94;;;:::i;:::-;;;;;;;;;;;;;;;;6466:180;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;;;;;;;;;;;:::i;:::-;;11621:182:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:2;;;;;;;;;;;;;;;;:::i;:::-;;1058:578:3;;;;;;;;;;;;;;;;:::i;:::-;;19243:178:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6652:132;;;;;;;;;;;;;;;;:::i;:::-;;12386:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4716:107;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4588:122;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18555:140;;;:::i;:::-;;;;;;;;;;;;;;;;;;674:378:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5781:213:0;;;;;;;;;;;;;;;;:::i;:::-;;6790:211;;;;;;;;;;;;;;;;:::i;:::-;;1608:305;;;;;;;;;;;;;;;;:::i;:::-;;18702:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6315:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;863:141;;;;;;;;;;;;;;;;:::i;:::-;;538:98:3;587:7;613:9;:16;;;;606:23;;538:98;:::o;2527:133:0:-;2597:4;2620:20;:33;2641:11;2620:33;;;;;;;;;;;;;;;;;;;;;;;;;;;2613:40;;2527:133;;;:::o;5285:204::-;5344:7;5407:1;5371:38;;:15;:24;5387:7;5371:24;;;;;;;;;;;;;;;;;;;;;:38;;;;5363:78;;;;;;;;;;;;;;;;;;;;;;5458:15;:24;5474:7;5458:24;;;;;;;;;;;;;;;;;;;;;5451:31;;5285:204;;;:::o;4896:383::-;4959:13;4975:25;:23;:25::i;:::-;4959:41;;5042:2;5018:26;;:11;:20;5030:7;5018:20;;;;;;;;;;;;;;;;;;;;;:26;;;;5010:66;;;;;;;;;;;;;;;;;;;;;;5108:5;5094:19;;:10;:19;;;:58;;;;5117:35;5134:5;5141:10;5117:16;:35::i;:::-;5094:58;5086:90;;;;;;;;;;;;;;;;;;;;;;5217:2;5190:15;:24;5206:7;5190:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5264:7;5260:2;5239:33;;5248:10;5239:33;;;;;;;;;;;;4896:383;;;:::o;768:89::-;818:7;844:6;;;;;;;;;;;837:13;;768:89;:::o;11955:94::-;11999:7;12025:10;:17;;;;12018:24;;11955:94;:::o;6466:180::-;6556:39;6575:10;6587:7;6556:18;:39::i;:::-;6548:48;;;;;;6607:32;6621:4;6627:2;6631:7;6607:13;:32::i;:::-;6466:180;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;11621:182:0:-;11701:7;11736:16;11746:5;11736:9;:16::i;:::-;11728:5;:24;11720:33;;;;;;11770:12;:19;11783:5;11770:19;;;;;;;;;;;;;;;11790:5;11770:26;;;;;;;;;;;;;;;;11763:33;;11621:182;;;;:::o;14929:166:2:-;;;;:::o;1058:578:3:-;1176:11;1217:5;:7;;;:9;;;1228:5;:7;;;:9;;;1239:5;:7;;;:9;;;1250:5;:7;;;:9;;;1261:5;:7;;;:9;;;1272:5;:7;;;:9;;;1283:6;1200:90;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1200:90:3;;;1190:101;;;;;;1176:115;;1343:1;1311:17;:22;1329:3;1311:22;;;;;;;;;;;:28;;;:33;1310:85;;;;;1392:1;1350:44;;:17;:22;1368:3;1350:22;;;;;;;;;;;:30;;;;;;;;;;;;:44;;;1310:85;1302:120;;;;;;;;;;;;;;;;;;;;;;1440:11;;;;;;;;;;;:20;;;1461:5;1468:6;1440:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1440:35:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1440:35:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1440:35:3;;;;;;;;;1432:71;;;;;;;;;;;;;;;;;;;;;;1514:13;1530:15;1542:2;1530:11;:15::i;:::-;1514:31;;1580:9;1590:5;1580:16;;;;;;;;;;;;;;;;;;1555:17;:22;1573:3;1555:22;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1606:23;1617:2;1621:7;1606:10;:23::i;:::-;;1058:578;;;;;;:::o;19243:178:0:-;19323:4;19303:10;498:8;488:18;;:6;;;;;;;;;;;:18;;;480:61;;;;;;;;;;;;;;;;;;;;;;19339:24;19351:2;19355:7;19339:11;:24::i;:::-;19373:20;19385:7;19373:11;:20::i;:::-;19410:4;19403:11;;19243:178;;;;;:::o;6652:132::-;6738:39;6755:4;6761:2;6765:7;6738:39;;;;;;;;;;;;:16;:39::i;:::-;6652:132;;;:::o;12386:148::-;12444:7;12479:13;:11;:13::i;:::-;12471:5;:21;12463:30;;;;;;12510:10;12521:5;12510:17;;;;;;;;;;;;;;;;12503:24;;12386:148;;;:::o;4716:107::-;4771:7;4796:11;:20;4808:7;4796:20;;;;;;;;;;;;;;;;;;;;;4789:27;;4716:107;;;:::o;4588:122::-;4643:7;4669:34;:17;:24;4687:5;4669:24;;;;;;;;;;;;;;;:32;:34::i;:::-;4662:41;;4588:122;;;:::o;18555:140::-;18595:13;18610;18625;18658:5;18665:7;18674:13;18650:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18555:140;;;:::o;674:378:3:-;726:7;745:27;;:::i;:::-;775:49;;;;;;;;792:13;;775:49;;;;816:6;775:49;;;;;745:79;;834:9;849:11;834:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;834:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:53;891:11;:17;;;910:11;:19;;;877:53;;;;;;;;;;;;;;;;949:20;972:13;;949:36;;995:20;1013:1;995:13;;:17;;:20;;;;:::i;:::-;;1033:12;1026:19;;;;674:378;;;:::o;5781:213:0:-;5866:10;5860:16;;:2;:16;;;;5852:25;;;;;;5924:8;5887:18;:30;5906:10;5887:30;;;;;;;;;;;;;;;:34;5918:2;5887:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;5974:2;5947:40;;5962:10;5947:40;;;5978:8;5947:40;;;;;;;;;;;;;;;5781:213;;:::o;6790:211::-;6896:31;6909:4;6915:2;6919:7;6896:12;:31::i;:::-;6945:48;6968:4;6974:2;6978:7;6987:5;6945:22;:48::i;:::-;6937:57;;;;;;6790:211;;;;:::o;1608:305::-;1655:10;498:8;488:18;;:6;;;;;;;;;;;:18;;;480:61;;;;;;;;;;;;;;;;;;;;;;1694:7;;;;;;;;;;;1685:16;;:5;:16;;;;1677:72;;;;;;;;;;;;;;;;;;;;;;1769:5;1759:7;;:15;;;;;;;;;;;;;;;;;;1798:4;1787:15;;:7;;;;;;;;;;;:15;;;1784:123;;;1822:18;1829:10;1822:18;;;;;;;;;;;;;;;1784:123;;;1876:20;1885:10;1876:20;;;;;;;;;;;;;;;1784:123;1608:305;;:::o;18702:151::-;18760:13;18793:16;18801:7;18793;:16::i;:::-;18785:25;;;;;;18827:10;:19;18838:7;18827:19;;;;;;;;;;;18820:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18702:151;;;:::o;6315:145::-;6395:4;6418:18;:25;6437:5;6418:25;;;;;;;;;;;;;;;:35;6444:8;6418:35;;;;;;;;;;;;;;;;;;;;;;;;;6411:42;;6315:145;;;;:::o;863:141::-;925:10;498:8;488:18;;:6;;;;;;;;;;;:18;;;480:61;;;;;;;;;;;;;;;;;;;;;;949:8;642:1;622:22;;:8;:22;;;;614:65;;;;;;;;;;;;;;;;;;;;;;969:28;988:8;969:18;:28::i;:::-;551:1;863:141;;:::o;7707:246::-;7792:4;7808:13;7824:16;7832:7;7824;:16::i;:::-;7808:32;;7869:5;7858:16;;:7;:16;;;:51;;;;7902:7;7878:31;;:20;7890:7;7878:11;:20::i;:::-;:31;;;7858:51;:87;;;;7913:32;7930:5;7937:7;7913:16;:32::i;:::-;7858:87;7850:96;;;7707:246;;;;:::o;12909:239::-;12994:38;13014:4;13020:2;13024:7;12994:19;:38::i;:::-;13043:47;13076:4;13082:7;13043:32;:47::i;:::-;13101:40;13129:2;13133:7;13101:27;:40::i;:::-;12909:239;;;:::o;13403:196::-;13466:24;13478:2;13482:7;13466:11;:24::i;:::-;13501:40;13529:2;13533:7;13501:27;:40::i;:::-;13552;13584:7;13552:31;:40::i;:::-;13403:196;;:::o;18859:237::-;18924:16;18932:7;18924;:16::i;:::-;18916:54;;;;;;;;;;;;;;;;;;;;;;18980:22;19005:43;19015:13;19005:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19030:17;19039:7;19030:8;:17::i;:::-;19005:9;:43::i;:::-;18980:68;;19081:8;19059:10;:19;19070:7;19059:19;;;;;;;;;;;:30;;;;;;;;;;;;:::i;:::-;;18859:237;;:::o;1065:112:5:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;834:176:6:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;9641:347:0:-;9762:4;9787:15;:2;:13;;;:15::i;:::-;9782:58;;9825:4;9818:11;;;;9782:58;9850:13;9882:2;9866:36;;;9903:10;9915:4;9921:7;9930:5;9866:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9866:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9866:70:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9866:70:0;;;;;;;;;9850:86;;3542:10;9964:16;;9954:26;;;:6;:26;;;;9946:35;;;9641:347;;;;;;;:::o;7195:152::-;7252:4;7268:13;7284:11;:20;7296:7;7284:20;;;;;;;;;;;;;;;;;;;;;7268:36;;7338:1;7321:19;;:5;:19;;;;7314:26;;;7195:152;;;:::o;1010:180::-;1076:16;1095:6;;;;;;;;;;;1076:25;;1120:8;1111:6;;:17;;;;;;;;;;;;;;;;;;1144:39;1164:8;1174;1144:39;;;;;;;;;;;;;;;;1010:180;;:::o;8629:484::-;8730:11;:20;8742:7;8730:20;;;;;;;;;;;;;;;;;;;;;8722:28;;:4;:28;;;8714:81;;;;;;;;;;;;;;;;;;;;;;8827:1;8813:16;;:2;:16;;;;8805:83;;;;;;;;;;;;;;;;;;;;;;8906:15;:24;8922:7;8906:24;;;;;;;;;;;;8899:31;;;;;;;;;;;8941:35;:17;:23;8959:4;8941:23;;;;;;;;;;;;;;;:33;:35::i;:::-;8986:33;:17;:21;9004:2;8986:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9061:2;9038:11;:20;9050:7;9038:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9098:7;9094:2;9079:27;;9088:4;9079:27;;;;;;;;;;;;8629:484;;;:::o;15375:1128::-;15637:22;15662:32;15692:1;15662:12;:18;15675:4;15662:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;15637:57;;15704:18;15725:17;:26;15743:7;15725:26;;;;;;;;;;;;15704:47;;15869:14;15855:10;:28;15851:323;;15899:19;15921:12;:18;15934:4;15921:18;;;;;;;;;;;;;;;15940:14;15921:34;;;;;;;;;;;;;;;;15899:56;;16003:11;15970:12;:18;15983:4;15970:18;;;;;;;;;;;;;;;15989:10;15970:30;;;;;;;;;;;;;;;:44;;;;16119:10;16086:17;:30;16104:11;16086:30;;;;;;;;;;;:43;;;;15851:323;;16260:12;:18;16273:4;16260:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;15375:1128;;;;:::o;14221:183::-;14334:12;:16;14347:2;14334:16;;;;;;;;;;;;;;;:23;;;;14305:17;:26;14323:7;14305:26;;;;;;;;;;;:52;;;;14367:12;:16;14380:2;14367:16;;;;;;;;;;;;;;;14389:7;14367:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;14367:30:0;;;;;;;;;;;;;;;;;;;;;;14221:183;;:::o;8110:320::-;8181:16;8189:7;8181;:16::i;:::-;8173:54;;;;;;;;;;;;;;;;;;;;;;8259:1;8245:16;;:2;:16;;;;8237:58;;;;;;;;;;;;;;;;;;;;;;8329:2;8306:11;:20;8318:7;8306:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8341:33;:17;:21;8359:2;8341:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8415:7;8411:2;8390:33;;8407:1;8390:33;;;;;;;;;;;;8110:320;;:::o;14599:161::-;14702:10;:17;;;;14675:15;:24;14691:7;14675:24;;;;;;;;;;;:44;;;;14729:10;14745:7;14729:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;14729:24:0;;;;;;;;;;;;;;;;;;;;;;14599:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;686:610:8:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1367:108:5:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;185:1453:3:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;161:607;;272:3;265:4;257:6;253:17;249:27;239:2;;290:1;287;280:12;239:2;314:3;332:74;347:58;398:6;347:58;;;332:74;;;323:83;;423:5;482:6;529:3;521:4;513:6;509:17;504:3;500:27;497:36;494:2;;;546:1;543;536:12;494:2;571:1;556:206;581:6;578:1;575:13;556:206;;;639:3;661:37;694:3;682:10;661:37;;;656:3;649:50;722:4;717:3;713:14;706:21;;750:4;745:3;741:14;734:21;;613:149;603:1;600;596:9;591:14;;556:206;;;560:14;232:536;;;;;;;;795:615;;910:3;903:4;895:6;891:17;887:27;877:2;;928:1;925;918:12;877:2;952:3;970:78;985:62;1040:6;985:62;;;970:78;;;961:87;;1065:5;1124:6;1171:3;1163:4;1155:6;1151:17;1146:3;1142:27;1139:36;1136:2;;;1188:1;1185;1178:12;1136:2;1213:1;1198:206;1223:6;1220:1;1217:13;1198:206;;;1281:3;1303:37;1336:3;1324:10;1303:37;;;1298:3;1291:50;1364:4;1359:3;1355:14;1348:21;;1392:4;1387:3;1383:14;1376:21;;1255:149;1245:1;1242;1238:9;1233:14;;1198:206;;;1202:14;870:540;;;;;;;;1418:124;;1495:6;1482:20;1473:29;;1507:30;1531:5;1507:30;;;1467:75;;;;;1549:128;;1630:6;1624:13;1615:22;;1642:30;1666:5;1642:30;;;1609:68;;;;;1684:130;;1764:6;1751:20;1742:29;;1776:33;1803:5;1776:33;;;1736:78;;;;;1821:128;;1900:6;1887:20;1878:29;;1912:32;1938:5;1912:32;;;1872:77;;;;;1956:132;;2039:6;2033:13;2024:22;;2051:32;2077:5;2051:32;;;2018:70;;;;;2096:440;;2197:3;2190:4;2182:6;2178:17;2174:27;2164:2;;2215:1;2212;2205:12;2164:2;2252:6;2239:20;2274:64;2289:48;2330:6;2289:48;;;2274:64;;;2265:73;;2358:6;2351:5;2344:21;2394:4;2386:6;2382:17;2427:4;2420:5;2416:16;2462:3;2453:6;2448:3;2444:16;2441:25;2438:2;;;2479:1;2476;2469:12;2438:2;2489:41;2523:6;2518:3;2513;2489:41;;;2157:379;;;;;;;;2545:442;;2647:3;2640:4;2632:6;2628:17;2624:27;2614:2;;2665:1;2662;2655:12;2614:2;2702:6;2689:20;2724:65;2739:49;2781:6;2739:49;;;2724:65;;;2715:74;;2809:6;2802:5;2795:21;2845:4;2837:6;2833:17;2878:4;2871:5;2867:16;2913:3;2904:6;2899:3;2895:16;2892:25;2889:2;;;2930:1;2927;2920:12;2889:2;2940:41;2974:6;2969:3;2964;2940:41;;;2607:380;;;;;;;;3024:456;;3134:4;3122:9;3117:3;3113:19;3109:30;3106:2;;;3152:1;3149;3142:12;3106:2;3170:20;3185:4;3170:20;;;3161:29;;3237:1;3268:49;3313:3;3304:6;3293:9;3289:22;3268:49;;;3262:3;3255:5;3251:15;3244:74;3200:129;3376:2;3409:49;3454:3;3445:6;3434:9;3430:22;3409:49;;;3402:4;3395:5;3391:16;3384:75;3339:131;3100:380;;;;;3516:494;;3626:4;3614:9;3609:3;3605:19;3601:30;3598:2;;;3644:1;3641;3634:12;3598:2;3662:20;3677:4;3662:20;;;3653:29;;3729:1;3760:68;3824:3;3815:6;3804:9;3800:22;3760:68;;;3754:3;3747:5;3743:15;3736:93;3692:148;3887:2;3920:68;3984:3;3975:6;3964:9;3960:22;3920:68;;;3913:4;3906:5;3902:16;3895:94;3850:150;3592:418;;;;;4045:664;;4157:5;4145:9;4140:3;4136:19;4132:31;4129:2;;;4176:1;4173;4166:12;4129:2;4194:20;4209:4;4194:20;;;4185:29;;4261:1;4292:70;4358:3;4349:6;4338:9;4334:22;4292:70;;;4286:3;4279:5;4275:15;4268:95;4224:150;4421:2;4454:70;4520:3;4511:6;4500:9;4496:22;4454:70;;;4447:4;4440:5;4436:16;4429:96;4384:152;4583:3;4617:70;4683:3;4674:6;4663:9;4659:22;4617:70;;;4610:4;4603:5;4599:16;4592:96;4546:153;4123:586;;;;;4716:130;;4796:6;4783:20;4774:29;;4808:33;4835:5;4808:33;;;4768:78;;;;;4853:241;;4957:2;4945:9;4936:7;4932:23;4928:32;4925:2;;;4973:1;4970;4963:12;4925:2;5008:1;5025:53;5070:7;5061:6;5050:9;5046:22;5025:53;;;5015:63;;4987:97;4919:175;;;;;5101:366;;;5222:2;5210:9;5201:7;5197:23;5193:32;5190:2;;;5238:1;5235;5228:12;5190:2;5273:1;5290:53;5335:7;5326:6;5315:9;5311:22;5290:53;;;5280:63;;5252:97;5380:2;5398:53;5443:7;5434:6;5423:9;5419:22;5398:53;;;5388:63;;5359:98;5184:283;;;;;;5474:491;;;;5612:2;5600:9;5591:7;5587:23;5583:32;5580:2;;;5628:1;5625;5618:12;5580:2;5663:1;5680:53;5725:7;5716:6;5705:9;5701:22;5680:53;;;5670:63;;5642:97;5770:2;5788:53;5833:7;5824:6;5813:9;5809:22;5788:53;;;5778:63;;5749:98;5878:2;5896:53;5941:7;5932:6;5921:9;5917:22;5896:53;;;5886:63;;5857:98;5574:391;;;;;;5972:721;;;;;6136:3;6124:9;6115:7;6111:23;6107:33;6104:2;;;6153:1;6150;6143:12;6104:2;6188:1;6205:53;6250:7;6241:6;6230:9;6226:22;6205:53;;;6195:63;;6167:97;6295:2;6313:53;6358:7;6349:6;6338:9;6334:22;6313:53;;;6303:63;;6274:98;6403:2;6421:53;6466:7;6457:6;6446:9;6442:22;6421:53;;;6411:63;;6382:98;6539:2;6528:9;6524:18;6511:32;6563:18;6555:6;6552:30;6549:2;;;6595:1;6592;6585:12;6549:2;6615:62;6669:7;6660:6;6649:9;6645:22;6615:62;;;6605:72;;6490:193;6098:595;;;;;;;;6700:360;;;6818:2;6806:9;6797:7;6793:23;6789:32;6786:2;;;6834:1;6831;6824:12;6786:2;6869:1;6886:53;6931:7;6922:6;6911:9;6907:22;6886:53;;;6876:63;;6848:97;6976:2;6994:50;7036:7;7027:6;7016:9;7012:22;6994:50;;;6984:60;;6955:95;6780:280;;;;;;7067:366;;;7188:2;7176:9;7167:7;7163:23;7159:32;7156:2;;;7204:1;7201;7194:12;7156:2;7239:1;7256:53;7301:7;7292:6;7281:9;7277:22;7256:53;;;7246:63;;7218:97;7346:2;7364:53;7409:7;7400:6;7389:9;7385:22;7364:53;;;7354:63;;7325:98;7150:283;;;;;;7440:710;;;;;7641:3;7629:9;7620:7;7616:23;7612:33;7609:2;;;7658:1;7655;7648:12;7609:2;7693:1;7710:53;7755:7;7746:6;7735:9;7731:22;7710:53;;;7700:63;;7672:97;7800:2;7818:53;7863:7;7854:6;7843:9;7839:22;7818:53;;;7808:63;;7779:98;7908:2;7926:76;7994:7;7985:6;7974:9;7970:22;7926:76;;;7916:86;;7887:121;8039:3;8058:76;8126:7;8117:6;8106:9;8102:22;8058:76;;;8048:86;;8018:122;7603:547;;;;;;;;8157:235;;8258:2;8246:9;8237:7;8233:23;8229:32;8226:2;;;8274:1;8271;8264:12;8226:2;8309:1;8326:50;8368:7;8359:6;8348:9;8344:22;8326:50;;;8316:60;;8288:94;8220:172;;;;;8399:257;;8511:2;8499:9;8490:7;8486:23;8482:32;8479:2;;;8527:1;8524;8517:12;8479:2;8562:1;8579:61;8632:7;8623:6;8612:9;8608:22;8579:61;;;8569:71;;8541:105;8473:183;;;;;8663:472;;;8794:2;8782:9;8773:7;8769:23;8765:32;8762:2;;;8810:1;8807;8800:12;8762:2;8845:1;8862:53;8907:7;8898:6;8887:9;8883:22;8862:53;;;8852:63;;8824:97;8980:2;8969:9;8965:18;8952:32;9004:18;8996:6;8993:30;8990:2;;;9036:1;9033;9026:12;8990:2;9056:63;9111:7;9102:6;9091:9;9087:22;9056:63;;;9046:73;;8931:194;8756:379;;;;;;9142:701;;;;9299:2;9287:9;9278:7;9274:23;9270:32;9267:2;;;9315:1;9312;9305:12;9267:2;9350:1;9367:53;9412:7;9403:6;9392:9;9388:22;9367:53;;;9357:63;;9329:97;9485:2;9474:9;9470:18;9457:32;9509:18;9501:6;9498:30;9495:2;;;9541:1;9538;9531:12;9495:2;9561:63;9616:7;9607:6;9596:9;9592:22;9561:63;;;9551:73;;9436:194;9689:2;9678:9;9674:18;9661:32;9713:18;9705:6;9702:30;9699:2;;;9745:1;9742;9735:12;9699:2;9765:62;9819:7;9810:6;9799:9;9795:22;9765:62;;;9755:72;;9640:193;9261:582;;;;;;9850:239;;9953:2;9941:9;9932:7;9928:23;9924:32;9921:2;;;9969:1;9966;9959:12;9921:2;10004:1;10021:52;10065:7;10056:6;10045:9;10041:22;10021:52;;;10011:62;;9983:96;9915:174;;;;;10096:261;;10210:2;10198:9;10189:7;10185:23;10181:32;10178:2;;;10226:1;10223;10216:12;10178:2;10261:1;10278:63;10333:7;10324:6;10313:9;10309:22;10278:63;;;10268:73;;10240:107;10172:185;;;;;10364:241;;10468:2;10456:9;10447:7;10443:23;10439:32;10436:2;;;10484:1;10481;10474:12;10436:2;10519:1;10536:53;10581:7;10572:6;10561:9;10557:22;10536:53;;;10526:63;;10498:97;10430:175;;;;;10613:173;;10700:46;10742:3;10734:6;10700:46;;;10775:4;10770:3;10766:14;10752:28;;10693:93;;;;;10795:189;;10890:54;10940:3;10932:6;10890:54;;;10973:4;10968:3;10964:14;10950:28;;10883:101;;;;;10992:142;11083:45;11122:5;11083:45;;;11078:3;11071:58;11065:69;;;11141:113;11224:24;11242:5;11224:24;;;11219:3;11212:37;11206:48;;;11294:660;11427:52;11473:5;11427:52;;;11492:84;11569:6;11564:3;11492:84;;;11485:91;;11597:54;11645:5;11597:54;;;11671:7;11699:1;11684:258;11709:6;11706:1;11703:13;11684:258;;;11776:6;11770:13;11797:63;11856:3;11841:13;11797:63;;;11790:70;;11877:58;11928:6;11877:58;;;11867:68;;11741:201;11731:1;11728;11724:9;11719:14;;11684:258;;;11688:14;11406:548;;;;;;11995:704;12146:52;12192:5;12146:52;;;12211:102;12306:6;12301:3;12211:102;;;12204:109;;12334:54;12382:5;12334:54;;;12408:7;12436:1;12421:266;12446:6;12443:1;12440:13;12421:266;;;12513:6;12507:13;12534:71;12601:3;12586:13;12534:71;;;12527:78;;12622:58;12673:6;12622:58;;;12612:68;;12478:209;12468:1;12465;12461:9;12456:14;;12421:266;;;12425:14;12125:574;;;;;;12740:624;12859:48;12901:5;12859:48;;;12920:74;12987:6;12982:3;12920:74;;;12913:81;;13015:50;13059:5;13015:50;;;13085:7;13113:1;13098:254;13123:6;13120:1;13117:13;13098:254;;;13190:6;13184:13;13211:63;13270:3;13255:13;13211:63;;;13204:70;;13291:54;13338:6;13291:54;;;13281:64;;13155:197;13145:1;13142;13138:9;13133:14;;13098:254;;;13102:14;12838:526;;;;;;13405:688;13552:48;13594:5;13552:48;;;13613:102;13708:6;13703:3;13613:102;;;13606:109;;13736:50;13780:5;13736:50;;;13806:7;13834:1;13819:262;13844:6;13841:1;13838:13;13819:262;;;13911:6;13905:13;13932:71;13999:3;13984:13;13932:71;;;13925:78;;14020:54;14067:6;14020:54;;;14010:64;;13876:205;13866:1;13863;13859:9;13854:14;;13819:262;;;13823:14;13531:562;;;;;;14101:104;14178:21;14193:5;14178:21;;;14173:3;14166:34;14160:45;;;14212:343;;14322:38;14354:5;14322:38;;;14372:70;14435:6;14430:3;14372:70;;;14365:77;;14447:52;14492:6;14487:3;14480:4;14473:5;14469:16;14447:52;;;14520:29;14542:6;14520:29;;;14515:3;14511:39;14504:46;;14302:253;;;;;;14562:347;;14674:39;14707:5;14674:39;;;14725:71;14789:6;14784:3;14725:71;;;14718:78;;14801:52;14846:6;14841:3;14834:4;14827:5;14823:16;14801:52;;;14874:29;14896:6;14874:29;;;14869:3;14865:39;14858:46;;14654:255;;;;;;14917:364;;15077:67;15141:2;15136:3;15077:67;;;15070:74;;15177:66;15173:1;15168:3;15164:11;15157:87;15272:2;15267:3;15263:12;15256:19;;15063:218;;;;15290:465;;15450:67;15514:2;15509:3;15450:67;;;15443:74;;15550:66;15546:1;15541:3;15537:11;15530:87;15651:66;15646:2;15641:3;15637:12;15630:88;15746:2;15741:3;15737:12;15730:19;;15436:319;;;;15764:364;;15924:67;15988:2;15983:3;15924:67;;;15917:74;;16024:66;16020:1;16015:3;16011:11;16004:87;16119:2;16114:3;16110:12;16103:19;;15910:218;;;;16137:364;;16297:67;16361:2;16356:3;16297:67;;;16290:74;;16397:66;16393:1;16388:3;16384:11;16377:87;16492:2;16487:3;16483:12;16476:19;;16283:218;;;;16510:364;;16670:67;16734:2;16729:3;16670:67;;;16663:74;;16770:66;16766:1;16761:3;16757:11;16750:87;16865:2;16860:3;16856:12;16849:19;;16656:218;;;;16883:465;;17043:67;17107:2;17102:3;17043:67;;;17036:74;;17143:66;17139:1;17134:3;17130:11;17123:87;17244:66;17239:2;17234:3;17230:12;17223:88;17339:2;17334:3;17330:12;17323:19;;17029:319;;;;17357:364;;17517:67;17581:2;17576:3;17517:67;;;17510:74;;17617:66;17613:1;17608:3;17604:11;17597:87;17712:2;17707:3;17703:12;17696:19;;17503:218;;;;17730:364;;17890:67;17954:2;17949:3;17890:67;;;17883:74;;17990:66;17986:1;17981:3;17977:11;17970:87;18085:2;18080:3;18076:12;18069:19;;17876:218;;;;18103:364;;18263:67;18327:2;18322:3;18263:67;;;18256:74;;18363:66;18359:1;18354:3;18350:11;18343:87;18458:2;18453:3;18449:12;18442:19;;18249:218;;;;18476:364;;18636:67;18700:2;18695:3;18636:67;;;18629:74;;18736:66;18732:1;18727:3;18723:11;18716:87;18831:2;18826:3;18822:12;18815:19;;18622:218;;;;18849:364;;19009:67;19073:2;19068:3;19009:67;;;19002:74;;19109:66;19105:1;19100:3;19096:11;19089:87;19204:2;19199:3;19195:12;19188:19;;18995:218;;;;19222:364;;19382:67;19446:2;19441:3;19382:67;;;19375:74;;19482:66;19478:1;19473:3;19469:11;19462:87;19577:2;19572:3;19568:12;19561:19;;19368:218;;;;19595:465;;19755:67;19819:2;19814:3;19755:67;;;19748:74;;19855:66;19851:1;19846:3;19842:11;19835:87;19956:66;19951:2;19946:3;19942:12;19935:88;20051:2;20046:3;20042:12;20035:19;;19741:319;;;;20123:454;20252:4;20247:3;20243:14;20332:3;20325:5;20321:15;20315:22;20343:62;20400:3;20395;20391:13;20377:12;20343:62;;;20272:139;20481:4;20474:5;20470:16;20464:23;20493:63;20550:4;20545:3;20541:14;20527:12;20493:63;;;20421:141;20225:352;;;;20639:538;20768:4;20763:3;20759:14;20848:3;20841:5;20837:15;20831:22;20859:104;20958:3;20953;20949:13;20935:12;20859:104;;;20788:181;21039:4;21032:5;21028:16;21022:23;21051:105;21150:4;21145:3;21141:14;21127:12;21051:105;;;20979:183;20741:436;;;;21237:754;21376:5;21371:3;21367:15;21457:3;21450:5;21446:15;21440:22;21468:108;21571:3;21566;21562:13;21548:12;21468:108;;;21397:185;21652:4;21645:5;21641:16;21635:23;21664:109;21767:4;21762:3;21758:14;21744:12;21664:109;;;21592:187;21849:4;21842:5;21838:16;21832:23;21861:109;21964:4;21959:3;21955:14;21941:12;21861:109;;;21789:187;21349:642;;;;21998:103;22071:24;22089:5;22071:24;;;22066:3;22059:37;22053:48;;;22108:113;22191:24;22209:5;22191:24;;;22186:3;22179:37;22173:48;;;22228:111;22309:24;22327:5;22309:24;;;22304:3;22297:37;22291:48;;;22346:152;22447:45;22467:24;22485:5;22467:24;;;22447:45;;;22442:3;22435:58;22429:69;;;22505:1338;;22922:75;22993:3;22984:6;22922:75;;;23019:2;23014:3;23010:12;23003:19;;23033:75;23104:3;23095:6;23033:75;;;23130:2;23125:3;23121:12;23114:19;;23144:117;23257:3;23248:6;23144:117;;;23283:2;23278:3;23274:12;23267:19;;23297:117;23410:3;23401:6;23297:117;;;23436:2;23431:3;23427:12;23420:19;;23450:75;23521:3;23512:6;23450:75;;;23547:2;23542:3;23538:12;23531:19;;23561:75;23632:3;23623:6;23561:75;;;23658:2;23653:3;23649:12;23642:19;;23672:121;23789:3;23780:6;23672:121;;;23815:2;23810:3;23806:12;23799:19;;23835:3;23828:10;;22910:933;;;;;;;;;;;23850:213;;23968:2;23957:9;23953:18;23945:26;;23982:71;24050:1;24039:9;24035:17;24026:6;23982:71;;;23939:124;;;;;24070:229;;24196:2;24185:9;24181:18;24173:26;;24210:79;24286:1;24275:9;24271:17;24262:6;24210:79;;;24167:132;;;;;24306:647;;24534:3;24523:9;24519:19;24511:27;;24549:79;24625:1;24614:9;24610:17;24601:6;24549:79;;;24639:72;24707:2;24696:9;24692:18;24683:6;24639:72;;;24722;24790:2;24779:9;24775:18;24766:6;24722:72;;;24842:9;24836:4;24832:20;24827:2;24816:9;24812:18;24805:48;24867:76;24938:4;24929:6;24867:76;;;24859:84;;24505:448;;;;;;;;24960:324;;25106:2;25095:9;25091:18;25083:26;;25120:71;25188:1;25177:9;25173:17;25164:6;25120:71;;;25202:72;25270:2;25259:9;25255:18;25246:6;25202:72;;;25077:207;;;;;;25291:201;;25403:2;25392:9;25388:18;25380:26;;25417:65;25479:1;25468:9;25464:17;25455:6;25417:65;;;25374:118;;;;;25499:301;;25637:2;25626:9;25622:18;25614:26;;25687:9;25681:4;25677:20;25673:1;25662:9;25658:17;25651:47;25712:78;25785:4;25776:6;25712:78;;;25704:86;;25608:192;;;;;25807:699;;26041:2;26030:9;26026:18;26018:26;;26091:9;26085:4;26081:20;26077:1;26066:9;26062:17;26055:47;26116:78;26189:4;26180:6;26116:78;;;26108:86;;26242:9;26236:4;26232:20;26227:2;26216:9;26212:18;26205:48;26267:78;26340:4;26331:6;26267:78;;;26259:86;;26393:9;26387:4;26383:20;26378:2;26367:9;26363:18;26356:48;26418:78;26491:4;26482:6;26418:78;;;26410:86;;26012:494;;;;;;;26513:407;;26704:2;26693:9;26689:18;26681:26;;26754:9;26748:4;26744:20;26740:1;26729:9;26725:17;26718:47;26779:131;26905:4;26779:131;;;26771:139;;26675:245;;;;26927:407;;27118:2;27107:9;27103:18;27095:26;;27168:9;27162:4;27158:20;27154:1;27143:9;27139:17;27132:47;27193:131;27319:4;27193:131;;;27185:139;;27089:245;;;;27341:407;;27532:2;27521:9;27517:18;27509:26;;27582:9;27576:4;27572:20;27568:1;27557:9;27553:17;27546:47;27607:131;27733:4;27607:131;;;27599:139;;27503:245;;;;27755:407;;27946:2;27935:9;27931:18;27923:26;;27996:9;27990:4;27986:20;27982:1;27971:9;27967:17;27960:47;28021:131;28147:4;28021:131;;;28013:139;;27917:245;;;;28169:407;;28360:2;28349:9;28345:18;28337:26;;28410:9;28404:4;28400:20;28396:1;28385:9;28381:17;28374:47;28435:131;28561:4;28435:131;;;28427:139;;28331:245;;;;28583:407;;28774:2;28763:9;28759:18;28751:26;;28824:9;28818:4;28814:20;28810:1;28799:9;28795:17;28788:47;28849:131;28975:4;28849:131;;;28841:139;;28745:245;;;;28997:407;;29188:2;29177:9;29173:18;29165:26;;29238:9;29232:4;29228:20;29224:1;29213:9;29209:17;29202:47;29263:131;29389:4;29263:131;;;29255:139;;29159:245;;;;29411:407;;29602:2;29591:9;29587:18;29579:26;;29652:9;29646:4;29642:20;29638:1;29627:9;29623:17;29616:47;29677:131;29803:4;29677:131;;;29669:139;;29573:245;;;;29825:407;;30016:2;30005:9;30001:18;29993:26;;30066:9;30060:4;30056:20;30052:1;30041:9;30037:17;30030:47;30091:131;30217:4;30091:131;;;30083:139;;29987:245;;;;30239:407;;30430:2;30419:9;30415:18;30407:26;;30480:9;30474:4;30470:20;30466:1;30455:9;30451:17;30444:47;30505:131;30631:4;30505:131;;;30497:139;;30401:245;;;;30653:407;;30844:2;30833:9;30829:18;30821:26;;30894:9;30888:4;30884:20;30880:1;30869:9;30865:17;30858:47;30919:131;31045:4;30919:131;;;30911:139;;30815:245;;;;31067:407;;31258:2;31247:9;31243:18;31235:26;;31308:9;31302:4;31298:20;31294:1;31283:9;31279:17;31272:47;31333:131;31459:4;31333:131;;;31325:139;;31229:245;;;;31481:407;;31672:2;31661:9;31657:18;31649:26;;31722:9;31716:4;31712:20;31708:1;31697:9;31693:17;31686:47;31747:131;31873:4;31747:131;;;31739:139;;31643:245;;;;31895:510;;32133:3;32122:9;32118:19;32110:27;;32148:117;32262:1;32251:9;32247:17;32238:6;32148:117;;;32276:119;32390:3;32379:9;32375:19;32366:6;32276:119;;;32104:301;;;;;;32412:213;;32530:2;32519:9;32515:18;32507:26;;32544:71;32612:1;32601:9;32597:17;32588:6;32544:71;;;32501:124;;;;;32632:324;;32778:2;32767:9;32763:18;32755:26;;32792:71;32860:1;32849:9;32845:17;32836:6;32792:71;;;32874:72;32942:2;32931:9;32927:18;32918:6;32874:72;;;32749:207;;;;;;32963:256;;33025:2;33019:9;33009:19;;33063:4;33055:6;33051:17;33162:6;33150:10;33147:22;33126:18;33114:10;33111:34;33108:62;33105:2;;;33183:1;33180;33173:12;33105:2;33203:10;33199:2;33192:22;33003:216;;;;;33226:240;;33379:18;33371:6;33368:30;33365:2;;;33411:1;33408;33401:12;33365:2;33446:4;33438:6;33434:17;33426:25;;33302:164;;;;33473:244;;33630:18;33622:6;33619:30;33616:2;;;33662:1;33659;33652:12;33616:2;33697:4;33689:6;33685:17;33677:25;;33553:164;;;;33724:321;;33867:18;33859:6;33856:30;33853:2;;;33899:1;33896;33889:12;33853:2;33966:4;33962:9;33955:4;33947:6;33943:17;33939:33;33931:41;;34030:4;34024;34020:15;34012:23;;33790:255;;;;34052:322;;34196:18;34188:6;34185:30;34182:2;;;34228:1;34225;34218:12;34182:2;34295:4;34291:9;34284:4;34276:6;34272:17;34268:33;34260:41;;34359:4;34353;34349:15;34341:23;;34119:255;;;;34381:93;;34461:3;34453:11;;34447:27;;;;34481:97;;34565:3;34557:11;;34551:27;;;;34585:103;;34675:3;34665:13;;34653:35;;;;34695:107;;34789:3;34779:13;;34767:35;;;;34809:121;;34902:5;34896:12;34886:22;;34867:63;;;;34937:122;;35031:5;35025:12;35015:22;;34996:63;;;;35066:102;;35158:4;35153:3;35149:14;35141:22;;35135:33;;;;35175:106;;35271:4;35266:3;35262:14;35254:22;;35248:33;;;;35289:130;;35410:3;35395:18;;35388:31;;;;;35428:140;;35559:3;35544:18;;35537:31;;;;;35577:158;;35726:3;35711:18;;35704:31;;;;;35744:162;;35858:6;35853:3;35846:19;35895:4;35890:3;35886:14;35871:29;;35839:67;;;;;35915:163;;36030:6;36025:3;36018:19;36067:4;36062:3;36058:14;36043:29;;36011:67;;;;;36086:91;;36148:24;36166:5;36148:24;;;36137:35;;36131:46;;;;36184:85;;36257:5;36250:13;36243:21;36232:32;;36226:43;;;;36276:72;;36338:5;36327:16;;36321:27;;;;36355:144;;36427:66;36420:5;36416:78;36405:89;;36399:100;;;;36506:121;;36579:42;36572:5;36568:54;36557:65;;36551:76;;;;36634:72;;36696:5;36685:16;;36679:27;;;;36713:129;;36800:37;36831:5;36800:37;;;36787:50;;36781:61;;;;36849:121;;36928:37;36959:5;36928:37;;;36915:50;;36909:61;;;;36977:108;;37056:24;37074:5;37056:24;;;37043:37;;37037:48;;;;37093:145;37174:6;37169:3;37164;37151:30;37230:1;37221:6;37216:3;37212:16;37205:27;37144:94;;;;37247:268;37312:1;37319:101;37333:6;37330:1;37327:13;37319:101;;;37409:1;37404:3;37400:11;37394:18;37390:1;37385:3;37381:11;37374:39;37355:2;37352:1;37348:10;37343:15;;37319:101;;;37435:6;37432:1;37429:13;37426:2;;;37500:1;37491:6;37486:3;37482:16;37475:27;37426:2;37296:219;;;;;37523:74;;37587:5;37576:16;;37570:27;;;;37604:97;;37692:2;37688:7;37683:2;37676:5;37672:14;37668:28;37658:38;;37652:49;;;;37709:117;37778:24;37796:5;37778:24;;;37771:5;37768:35;37758:2;;37817:1;37814;37807:12;37758:2;37752:74;;37833:111;37899:21;37914:5;37899:21;;;37892:5;37889:32;37879:2;;37935:1;37932;37925:12;37879:2;37873:71;;37951:117;38020:24;38038:5;38020:24;;;38013:5;38010:35;38000:2;;38059:1;38056;38049:12;38000:2;37994:74;;38075:115;38143:23;38160:5;38143:23;;;38136:5;38133:34;38123:2;;38181:1;38178;38171:12;38123:2;38117:73;;38197:117;38266:24;38284:5;38266:24;;;38259:5;38256:35;38246:2;;38305:1;38302;38295:12;38246:2;38240:74;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./Verifier.sol\";\nimport \"./ERC721Mintable.sol\";\nimport 'openzeppelin-solidity/contracts/math/SafeMath.sol';\n\ncontract SolnSquareVerifier is AstroHousing {\n    Verifier private VerifierAcc;\n\n    struct Solution {\n        uint256 index;\n        address account;\n    }\n\n    uint256 solutionIndex = 0;\n    mapping(bytes32=>Solution) private solutionSubmitted;\n    Solution[] private solutions;\n\n    event solutionAdded(uint256 solutionKey, address sender);\n    \n    function getSolutionLength() public view returns(uint256) {\n        return solutions.length;\n    }\n\n    using SafeMath for uint256;\n    function addSolution(address Solver) public returns(uint256) {\n        Solution memory newSolution = Solution({index: solutionIndex, account: Solver});\n        solutions.push(newSolution);\n\n        emit solutionAdded(newSolution.index, newSolution.account);\n        \n        uint256 currentIndex = solutionIndex;\n        solutionIndex.add(1);\n\n        return currentIndex;\n    }\n\n    function mintNewNFT(address to, uint256 tokenId, Verifier.Proof memory proof, uint[2] memory inputs) public {\n        bytes32 key = keccak256(abi.encodePacked(proof.a.X, proof.a.Y, proof.b.X, proof.b.Y, proof.c.X, proof.c.Y, inputs));\n\n        require((solutionSubmitted[key].index == 0) && (solutionSubmitted[key].account == address(0)), \"Solution already used.\");\n        require(VerifierAcc.verifyTx(proof, inputs), \"The proof is incorrect.\");\n\n        uint256 index = addSolution(to);\n        solutionSubmitted[key] = solutions[index];\n        super.mint(to, tokenId);\n    }\n}",
  "sourcePath": "D:/Udacity_nanodegree_blockchain/ND projects/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/D/Udacity_nanodegree_blockchain/ND projects/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7659
      ]
    },
    "id": 7660,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7485,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 7486,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "absolutePath": "/D/Udacity_nanodegree_blockchain/ND projects/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7487,
        "nodeType": "ImportDirective",
        "scope": 7660,
        "sourceUnit": 8582,
        "src": "68:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Udacity_nanodegree_blockchain/ND projects/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7488,
        "nodeType": "ImportDirective",
        "scope": 7660,
        "sourceUnit": 1159,
        "src": "93:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 7489,
        "nodeType": "ImportDirective",
        "scope": 7660,
        "sourceUnit": 8818,
        "src": "124:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7490,
              "name": "AstroHousing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1158,
              "src": "216:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AstroHousing_$1158",
                "typeString": "contract AstroHousing"
              }
            },
            "id": 7491,
            "nodeType": "InheritanceSpecifier",
            "src": "216:12:3"
          }
        ],
        "contractDependencies": [
          96,
          176,
          222,
          722,
          1020,
          1125,
          1158,
          7483
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7659,
        "linearizedBaseContracts": [
          7659,
          1158,
          1125,
          7483,
          1020,
          722,
          222,
          176,
          96
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7493,
            "name": "VerifierAcc",
            "nodeType": "VariableDeclaration",
            "scope": 7659,
            "src": "235:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8581",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7492,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8581,
              "src": "235:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8581",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7498,
            "members": [
              {
                "constant": false,
                "id": 7495,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7498,
                "src": "296:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7494,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "296:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7497,
                "name": "account",
                "nodeType": "VariableDeclaration",
                "scope": 7498,
                "src": "319:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7496,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "319:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7659,
            "src": "270:71:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7501,
            "name": "solutionIndex",
            "nodeType": "VariableDeclaration",
            "scope": 7659,
            "src": "347:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7499,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "347:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7500,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "371:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7505,
            "name": "solutionSubmitted",
            "nodeType": "VariableDeclaration",
            "scope": 7659,
            "src": "378:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7498_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7504,
              "keyType": {
                "id": 7502,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "386:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "378:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7498_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7503,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7498,
                "src": "395:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7498_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7508,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7659,
            "src": "436:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7498_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7506,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7498,
                "src": "436:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7498_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7507,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "436:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7498_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7514,
            "name": "solutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7510,
                  "indexed": false,
                  "name": "solutionKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "491:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7512,
                  "indexed": false,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "512:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "490:37:3"
            },
            "src": "471:57:3"
          },
          {
            "body": {
              "id": 7522,
              "nodeType": "Block",
              "src": "596:40:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7519,
                      "name": "solutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7508,
                      "src": "613:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Solution_$7498_storage_$dyn_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                      }
                    },
                    "id": 7520,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "613:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7518,
                  "id": 7521,
                  "nodeType": "Return",
                  "src": "606:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 7523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSolutionLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "564:2:3"
            },
            "returnParameters": {
              "id": 7518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7517,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7523,
                  "src": "587:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "586:9:3"
            },
            "scope": 7659,
            "src": "538:98:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "id": 7526,
            "libraryName": {
              "contractScope": null,
              "id": 7524,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8817,
              "src": "648:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$8817",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "642:27:3",
            "typeName": {
              "id": 7525,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "661:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 7565,
              "nodeType": "Block",
              "src": "735:317:3",
              "statements": [
                {
                  "assignments": [
                    7534
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7534,
                      "name": "newSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7565,
                      "src": "745:27:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7498_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7533,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7498,
                        "src": "745:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7498_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7539,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7536,
                        "name": "solutionIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7501,
                        "src": "792:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7537,
                        "name": "Solver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7528,
                        "src": "816:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7535,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7498,
                      "src": "775:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7498_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "index",
                      "account"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "775:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7498_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "745:79:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7543,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7534,
                        "src": "849:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7498_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7498_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7540,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7508,
                        "src": "834:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7498_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "834:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7498_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "834:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7545,
                  "nodeType": "ExpressionStatement",
                  "src": "834:27:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7547,
                          "name": "newSolution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7534,
                          "src": "891:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7498_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7548,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7495,
                        "src": "891:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7549,
                          "name": "newSolution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7534,
                          "src": "910:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7498_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7550,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "account",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7497,
                        "src": "910:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7546,
                      "name": "solutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7514,
                      "src": "877:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7552,
                  "nodeType": "EmitStatement",
                  "src": "872:58:3"
                },
                {
                  "assignments": [
                    7554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7554,
                      "name": "currentIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 7565,
                      "src": "949:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7553,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "949:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7556,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 7555,
                    "name": "solutionIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7501,
                    "src": "972:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "949:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 7560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1013:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7557,
                        "name": "solutionIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7501,
                        "src": "995:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8657,
                      "src": "995:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "995:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7562,
                  "nodeType": "ExpressionStatement",
                  "src": "995:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7563,
                    "name": "currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7554,
                    "src": "1033:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7532,
                  "id": 7564,
                  "nodeType": "Return",
                  "src": "1026:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 7566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7528,
                  "name": "Solver",
                  "nodeType": "VariableDeclaration",
                  "scope": 7566,
                  "src": "695:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "694:16:3"
            },
            "returnParameters": {
              "id": 7532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7531,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7566,
                  "src": "726:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "725:9:3"
            },
            "scope": 7659,
            "src": "674:378:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7657,
              "nodeType": "Block",
              "src": "1166:470:3",
              "statements": [
                {
                  "assignments": [
                    7580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7580,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7657,
                      "src": "1176:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7579,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1176:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7605,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7584,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7572,
                                "src": "1217:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7585,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8250,
                              "src": "1217:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7667_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7586,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7664,
                            "src": "1217:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7587,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7572,
                                "src": "1228:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7588,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8250,
                              "src": "1228:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7667_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7589,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7666,
                            "src": "1228:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7590,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7572,
                                "src": "1239:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7591,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8252,
                              "src": "1239:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7676_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7592,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7671,
                            "src": "1239:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7593,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7572,
                                "src": "1250:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7594,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8252,
                              "src": "1250:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7676_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7595,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7675,
                            "src": "1250:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7596,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7572,
                                "src": "1261:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7597,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8254,
                              "src": "1261:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7667_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7598,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7664,
                            "src": "1261:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7599,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7572,
                                "src": "1272:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7600,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8254,
                              "src": "1272:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7667_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7601,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7666,
                            "src": "1272:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7602,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7576,
                            "src": "1283:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7582,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8910,
                            "src": "1200:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1200:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1200:90:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7581,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8917,
                      "src": "1190:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1190:101:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1176:115:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 7607,
                                    "name": "solutionSubmitted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7505,
                                    "src": "1311:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7498_storage_$",
                                      "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                                    }
                                  },
                                  "id": 7609,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 7608,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7580,
                                    "src": "1329:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1311:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Solution_$7498_storage",
                                    "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                  }
                                },
                                "id": 7610,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "index",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7495,
                                "src": "1311:28:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 7611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1343:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1311:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7613,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1310:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 7621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 7614,
                                    "name": "solutionSubmitted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7505,
                                    "src": "1350:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7498_storage_$",
                                      "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                                    }
                                  },
                                  "id": 7616,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 7615,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7580,
                                    "src": "1368:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1350:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Solution_$7498_storage",
                                    "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                  }
                                },
                                "id": 7617,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "account",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7497,
                                "src": "1350:30:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 7619,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1392:1:3",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 7618,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1384:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 7620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1384:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1350:44:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7622,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1349:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1310:85:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c726561647920757365642e",
                        "id": 7624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1397:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7817fb1996c8f7ee4b4579c20e5f772ea6281f01798de350a04377698502f28",
                          "typeString": "literal_string \"Solution already used.\""
                        },
                        "value": "Solution already used."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7817fb1996c8f7ee4b4579c20e5f772ea6281f01798de350a04377698502f28",
                          "typeString": "literal_string \"Solution already used.\""
                        }
                      ],
                      "id": 7606,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8926,
                        8927
                      ],
                      "referencedDeclaration": 8927,
                      "src": "1302:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1302:120:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7626,
                  "nodeType": "ExpressionStatement",
                  "src": "1302:120:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7630,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7572,
                            "src": "1461:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7631,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7576,
                            "src": "1468:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7628,
                            "name": "VerifierAcc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7493,
                            "src": "1440:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$8581",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8580,
                          "src": "1440:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8255_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                          }
                        },
                        "id": 7632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1440:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652070726f6f6620697320696e636f72726563742e",
                        "id": 7633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1477:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a425a071bf90c728f1d8534e515c84dd19c1bb5e2db3f3c2a78ffb5eee7a7c1f",
                          "typeString": "literal_string \"The proof is incorrect.\""
                        },
                        "value": "The proof is incorrect."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a425a071bf90c728f1d8534e515c84dd19c1bb5e2db3f3c2a78ffb5eee7a7c1f",
                          "typeString": "literal_string \"The proof is incorrect.\""
                        }
                      ],
                      "id": 7627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8926,
                        8927
                      ],
                      "referencedDeclaration": 8927,
                      "src": "1432:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1432:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7635,
                  "nodeType": "ExpressionStatement",
                  "src": "1432:71:3"
                },
                {
                  "assignments": [
                    7637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7637,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 7657,
                      "src": "1514:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7636,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1514:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7641,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7639,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7568,
                        "src": "1542:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7638,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7566,
                      "src": "1530:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 7640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1514:31:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7642,
                        "name": "solutionSubmitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7505,
                        "src": "1555:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7498_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7644,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7643,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7580,
                        "src": "1573:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1555:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7498_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7645,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7508,
                        "src": "1580:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7498_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7647,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7646,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7637,
                        "src": "1590:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1580:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7498_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "src": "1555:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7498_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7649,
                  "nodeType": "ExpressionStatement",
                  "src": "1555:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7653,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7568,
                        "src": "1617:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7654,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7570,
                        "src": "1621:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7650,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8976,
                        "src": "1606:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7659",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1157,
                      "src": "1606:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1606:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7656,
                  "nodeType": "ExpressionStatement",
                  "src": "1606:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 7658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNewNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7568,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7658,
                  "src": "1078:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7570,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7658,
                  "src": "1090:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7572,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7658,
                  "src": "1107:27:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7571,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8255,
                    "src": "1107:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8255_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7576,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7658,
                  "src": "1136:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7573,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1136:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7575,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1141:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1136:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1077:81:3"
            },
            "returnParameters": {
              "id": 7578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1166:0:3"
            },
            "scope": 7659,
            "src": "1058:578:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7660,
        "src": "185:1453:3"
      }
    ],
    "src": "0:1638:3"
  },
  "legacyAST": {
    "absolutePath": "/D/Udacity_nanodegree_blockchain/ND projects/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7659
      ]
    },
    "id": 7660,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7485,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 7486,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "absolutePath": "/D/Udacity_nanodegree_blockchain/ND projects/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7487,
        "nodeType": "ImportDirective",
        "scope": 7660,
        "sourceUnit": 8582,
        "src": "68:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Udacity_nanodegree_blockchain/ND projects/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7488,
        "nodeType": "ImportDirective",
        "scope": 7660,
        "sourceUnit": 1159,
        "src": "93:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 7489,
        "nodeType": "ImportDirective",
        "scope": 7660,
        "sourceUnit": 8818,
        "src": "124:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7490,
              "name": "AstroHousing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1158,
              "src": "216:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AstroHousing_$1158",
                "typeString": "contract AstroHousing"
              }
            },
            "id": 7491,
            "nodeType": "InheritanceSpecifier",
            "src": "216:12:3"
          }
        ],
        "contractDependencies": [
          96,
          176,
          222,
          722,
          1020,
          1125,
          1158,
          7483
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7659,
        "linearizedBaseContracts": [
          7659,
          1158,
          1125,
          7483,
          1020,
          722,
          222,
          176,
          96
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7493,
            "name": "VerifierAcc",
            "nodeType": "VariableDeclaration",
            "scope": 7659,
            "src": "235:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8581",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7492,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8581,
              "src": "235:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8581",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7498,
            "members": [
              {
                "constant": false,
                "id": 7495,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7498,
                "src": "296:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7494,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "296:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7497,
                "name": "account",
                "nodeType": "VariableDeclaration",
                "scope": 7498,
                "src": "319:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7496,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "319:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7659,
            "src": "270:71:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7501,
            "name": "solutionIndex",
            "nodeType": "VariableDeclaration",
            "scope": 7659,
            "src": "347:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7499,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "347:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7500,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "371:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7505,
            "name": "solutionSubmitted",
            "nodeType": "VariableDeclaration",
            "scope": 7659,
            "src": "378:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7498_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7504,
              "keyType": {
                "id": 7502,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "386:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "378:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7498_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7503,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7498,
                "src": "395:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7498_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7508,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7659,
            "src": "436:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7498_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7506,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7498,
                "src": "436:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7498_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7507,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "436:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7498_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7514,
            "name": "solutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7510,
                  "indexed": false,
                  "name": "solutionKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "491:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7512,
                  "indexed": false,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "512:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "490:37:3"
            },
            "src": "471:57:3"
          },
          {
            "body": {
              "id": 7522,
              "nodeType": "Block",
              "src": "596:40:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7519,
                      "name": "solutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7508,
                      "src": "613:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Solution_$7498_storage_$dyn_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                      }
                    },
                    "id": 7520,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "613:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7518,
                  "id": 7521,
                  "nodeType": "Return",
                  "src": "606:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 7523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSolutionLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "564:2:3"
            },
            "returnParameters": {
              "id": 7518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7517,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7523,
                  "src": "587:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "586:9:3"
            },
            "scope": 7659,
            "src": "538:98:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "id": 7526,
            "libraryName": {
              "contractScope": null,
              "id": 7524,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8817,
              "src": "648:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$8817",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "642:27:3",
            "typeName": {
              "id": 7525,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "661:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 7565,
              "nodeType": "Block",
              "src": "735:317:3",
              "statements": [
                {
                  "assignments": [
                    7534
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7534,
                      "name": "newSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7565,
                      "src": "745:27:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7498_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7533,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7498,
                        "src": "745:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7498_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7539,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7536,
                        "name": "solutionIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7501,
                        "src": "792:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7537,
                        "name": "Solver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7528,
                        "src": "816:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7535,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7498,
                      "src": "775:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7498_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "index",
                      "account"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "775:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7498_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "745:79:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7543,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7534,
                        "src": "849:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7498_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7498_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7540,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7508,
                        "src": "834:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7498_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "834:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7498_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "834:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7545,
                  "nodeType": "ExpressionStatement",
                  "src": "834:27:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7547,
                          "name": "newSolution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7534,
                          "src": "891:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7498_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7548,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7495,
                        "src": "891:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7549,
                          "name": "newSolution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7534,
                          "src": "910:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7498_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7550,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "account",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7497,
                        "src": "910:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7546,
                      "name": "solutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7514,
                      "src": "877:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7552,
                  "nodeType": "EmitStatement",
                  "src": "872:58:3"
                },
                {
                  "assignments": [
                    7554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7554,
                      "name": "currentIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 7565,
                      "src": "949:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7553,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "949:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7556,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 7555,
                    "name": "solutionIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7501,
                    "src": "972:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "949:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 7560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1013:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7557,
                        "name": "solutionIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7501,
                        "src": "995:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8657,
                      "src": "995:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "995:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7562,
                  "nodeType": "ExpressionStatement",
                  "src": "995:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7563,
                    "name": "currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7554,
                    "src": "1033:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7532,
                  "id": 7564,
                  "nodeType": "Return",
                  "src": "1026:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 7566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7528,
                  "name": "Solver",
                  "nodeType": "VariableDeclaration",
                  "scope": 7566,
                  "src": "695:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "694:16:3"
            },
            "returnParameters": {
              "id": 7532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7531,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7566,
                  "src": "726:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "725:9:3"
            },
            "scope": 7659,
            "src": "674:378:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7657,
              "nodeType": "Block",
              "src": "1166:470:3",
              "statements": [
                {
                  "assignments": [
                    7580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7580,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7657,
                      "src": "1176:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7579,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1176:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7605,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7584,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7572,
                                "src": "1217:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7585,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8250,
                              "src": "1217:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7667_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7586,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7664,
                            "src": "1217:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7587,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7572,
                                "src": "1228:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7588,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8250,
                              "src": "1228:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7667_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7589,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7666,
                            "src": "1228:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7590,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7572,
                                "src": "1239:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7591,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8252,
                              "src": "1239:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7676_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7592,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7671,
                            "src": "1239:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7593,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7572,
                                "src": "1250:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7594,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8252,
                              "src": "1250:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7676_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7595,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7675,
                            "src": "1250:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7596,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7572,
                                "src": "1261:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7597,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8254,
                              "src": "1261:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7667_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7598,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7664,
                            "src": "1261:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7599,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7572,
                                "src": "1272:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7600,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8254,
                              "src": "1272:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7667_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7601,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7666,
                            "src": "1272:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7602,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7576,
                            "src": "1283:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7582,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8910,
                            "src": "1200:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1200:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1200:90:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7581,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8917,
                      "src": "1190:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1190:101:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1176:115:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 7607,
                                    "name": "solutionSubmitted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7505,
                                    "src": "1311:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7498_storage_$",
                                      "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                                    }
                                  },
                                  "id": 7609,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 7608,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7580,
                                    "src": "1329:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1311:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Solution_$7498_storage",
                                    "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                  }
                                },
                                "id": 7610,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "index",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7495,
                                "src": "1311:28:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 7611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1343:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1311:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7613,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1310:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 7621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 7614,
                                    "name": "solutionSubmitted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7505,
                                    "src": "1350:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7498_storage_$",
                                      "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                                    }
                                  },
                                  "id": 7616,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 7615,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7580,
                                    "src": "1368:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1350:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Solution_$7498_storage",
                                    "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                  }
                                },
                                "id": 7617,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "account",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7497,
                                "src": "1350:30:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 7619,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1392:1:3",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 7618,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1384:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 7620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1384:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1350:44:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7622,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1349:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1310:85:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c726561647920757365642e",
                        "id": 7624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1397:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7817fb1996c8f7ee4b4579c20e5f772ea6281f01798de350a04377698502f28",
                          "typeString": "literal_string \"Solution already used.\""
                        },
                        "value": "Solution already used."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7817fb1996c8f7ee4b4579c20e5f772ea6281f01798de350a04377698502f28",
                          "typeString": "literal_string \"Solution already used.\""
                        }
                      ],
                      "id": 7606,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8926,
                        8927
                      ],
                      "referencedDeclaration": 8927,
                      "src": "1302:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1302:120:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7626,
                  "nodeType": "ExpressionStatement",
                  "src": "1302:120:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7630,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7572,
                            "src": "1461:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7631,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7576,
                            "src": "1468:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7628,
                            "name": "VerifierAcc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7493,
                            "src": "1440:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$8581",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8580,
                          "src": "1440:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8255_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                          }
                        },
                        "id": 7632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1440:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652070726f6f6620697320696e636f72726563742e",
                        "id": 7633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1477:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a425a071bf90c728f1d8534e515c84dd19c1bb5e2db3f3c2a78ffb5eee7a7c1f",
                          "typeString": "literal_string \"The proof is incorrect.\""
                        },
                        "value": "The proof is incorrect."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a425a071bf90c728f1d8534e515c84dd19c1bb5e2db3f3c2a78ffb5eee7a7c1f",
                          "typeString": "literal_string \"The proof is incorrect.\""
                        }
                      ],
                      "id": 7627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8926,
                        8927
                      ],
                      "referencedDeclaration": 8927,
                      "src": "1432:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1432:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7635,
                  "nodeType": "ExpressionStatement",
                  "src": "1432:71:3"
                },
                {
                  "assignments": [
                    7637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7637,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 7657,
                      "src": "1514:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7636,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1514:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7641,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7639,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7568,
                        "src": "1542:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7638,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7566,
                      "src": "1530:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 7640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1514:31:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7642,
                        "name": "solutionSubmitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7505,
                        "src": "1555:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7498_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7644,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7643,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7580,
                        "src": "1573:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1555:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7498_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7645,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7508,
                        "src": "1580:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7498_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7647,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7646,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7637,
                        "src": "1590:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1580:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7498_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "src": "1555:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7498_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7649,
                  "nodeType": "ExpressionStatement",
                  "src": "1555:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7653,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7568,
                        "src": "1617:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7654,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7570,
                        "src": "1621:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7650,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8976,
                        "src": "1606:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7659",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1157,
                      "src": "1606:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1606:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7656,
                  "nodeType": "ExpressionStatement",
                  "src": "1606:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 7658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNewNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7568,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7658,
                  "src": "1078:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7570,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7658,
                  "src": "1090:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7572,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7658,
                  "src": "1107:27:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8255_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7571,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8255,
                    "src": "1107:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8255_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7576,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7658,
                  "src": "1136:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7573,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1136:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7575,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1141:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1136:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1077:81:3"
            },
            "returnParameters": {
              "id": 7578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1166:0:3"
            },
            "scope": 7659,
            "src": "1058:578:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7660,
        "src": "185:1453:3"
      }
    ],
    "src": "0:1638:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event",
          "signature": "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event",
          "signature": "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa"
        },
        "0xeb38696426b5aa8881f6ba9f2f3e0ac06ee7ea6ffbe944120578d61191ef6101": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "oldOwner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "ownershipTransfered",
          "type": "event",
          "signature": "0xeb38696426b5aa8881f6ba9f2f3e0ac06ee7ea6ffbe944120578d61191ef6101"
        },
        "0x99b1f37ff418cc6355fb1856810cbfe9834a4a5bebf46bd6a978bd590b50539b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "solutionKey",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "solutionAdded",
          "type": "event",
          "signature": "0x99b1f37ff418cc6355fb1856810cbfe9834a4a5bebf46bd6a978bd590b50539b"
        },
        "0x529aebee0fa53cdfb493ac455bd2a7b5924a502f5e34b85b84ebda0e84e62cb2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "solutionKey",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "solutionAdded",
          "type": "event",
          "signature": "0x529aebee0fa53cdfb493ac455bd2a7b5924a502f5e34b85b84ebda0e84e62cb2"
        }
      },
      "links": {},
      "address": "0x8F63829a9F61e915170C9686e3A801390CB34552",
      "transactionHash": "0x679b4066bfd04278e0be5a9e2499d4ecfdf9e822c3a457da6895ff86c723618c"
    }
  },
  "schemaVersion": "3.0.20",
  "updatedAt": "2022-01-19T01:01:25.346Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}